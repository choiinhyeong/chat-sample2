{"version":3,"file":"js/953.d111dfb2.js","mappings":"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","sources":["webpack://frontend/./src/components/LiveConference.vue","webpack://frontend/./src/components/LiveConference.vue?d675"],"sourcesContent":["<template>\r\n  <div class=\"container flex column\">\r\n<!--    <header>-->\r\n<!--      <input type=\"text\" v-model=\"confName\" :disabled=\"isConnected\" />-->\r\n<!--      <button @click=\"onConnect\" v-if=\"!isConnected\">연결하기</button>-->\r\n<!--      <button @click=\"onDisConnectConference\" v-if=\"isConnected\">연결해제하기</button>-->\r\n<!--      <button @click=\"onCreateLocalScreen\" v-if=\"isConnected && !localScreen\">화면공유적용</button>-->\r\n<!--      <button @click=\"onDestroyLocalScreen\" v-if=\"isConnected && localScreen\">화면공유해제</button>-->\r\n\r\n<!--      <div style=\"display:inline-block;\" v-if=\"isConnected\">-->\r\n<!--        <select id=\"camaraSource\">-->\r\n<!--          <option v-for=\"(item, index) in cameraDevices\" :key=\"index\" :value=\"item.deviceId\">{{item.label}}</option>-->\r\n<!--        </select>-->\r\n<!--        <button @click=\"onChangeCamera\">카메라변경</button>-->\r\n<!--      </div>-->\r\n<!--    </header>-->\r\n\r\n    <div class=\"flex row\">\r\n      <div class=\"media-list\">\r\n        <div class=\"media-block\" v-if=\"localMedia\">\r\n          <div class=\"participant-id\">{{userInfo.deptNm}} {{userInfo.lrnerNm}} {{myId}}</div>\r\n          <div class=\"local-container\"></div>\r\n        </div>\r\n\r\n        <div\r\n            class=\"media-block\"\r\n            v-for=\"(item, i) in remoteParticipants\"\r\n            :key=\"i\"\r\n            :id=\"item.participant.id\"\r\n        >\r\n          <div class=\"participant-id\">{{item.participant.lrnerNm}} {{item.participant.id}}</div>\r\n          <voice-meter :level=\"item.level\" />\r\n          <remote-video v-for=\"(video, j) in item.videos\" :key=\"j\" autoplay controls :remoteVideo=\"video\" />\r\n        </div>\r\n      </div>\r\n\r\n<!--      <div class=\"spotlight\">-->\r\n<!--        <video id=\"spotlight-video\" autoplay playsInline></video>-->\r\n<!--      </div>-->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport voiceMeter from './connectLive/VoiceMeter.vue';\r\nimport remoteVideo from './connectLive/RemoteVideo.vue';\r\nimport ConnectLive from '@connectlive/connectlive-web-sdk';\r\nimport {ref, nextTick, onMounted, onUnmounted} from \"vue\";\r\nimport {useRoute} from \"vue-router\";\r\n\r\nexport default {\r\n  name: \"LiveConference\",\r\n  components: {\r\n    voiceMeter,\r\n    remoteVideo\r\n  },\r\n  setup(){\r\n    const confName = ref();\r\n    const conf = ref(null);\r\n    const localMedia = ref(null);\r\n    const localScreen = ref(null);\r\n    const remoteParticipants = ref([]);\r\n    const isConnected = ref(false);\r\n    const myId = ref('');\r\n    const cameraDevices = ref([]);\r\n    const audioCheckInterval = ref(-1);\r\n\r\n    // const key = '1234567890';\r\n    // const serviceId = 'SERVICEID1';\r\n    // const key = '6d03bbd05f18016c1af2baaddab2db521953dfe900223455954d6044227912a2';\r\n    // const serviceId = 'aa3a145e-843a-4702-a0a1-fe3b0dee420b';\r\n    \r\n    const userInfo = ref({});\r\n    const route = useRoute();\r\n\r\n    const init = () => {\r\n\r\n      userInfo.value = JSON.parse(decodeURIComponent((atob(route.query.params))));\r\n      confName.value = userInfo.value.channelNo+'conf';\r\n      if(conf.value === null) {\r\n        // onConnect();\r\n        if (userInfo.value.accessType === 'full-access') {\r\n          onConnect();\r\n        } else {\r\n          setTimeout(() => {\r\n            onConnect();\r\n          }, 3000)\r\n        }\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      console.log('mounted===>', conf.value)\r\n      init();\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      onDisConnectConference();\r\n    })\r\n\r\n    const onProvisioning = async() => {\r\n      await ConnectLive.signIn({\r\n        serviceId: '2022KBH0C8AZ',\r\n        serviceKey: '2022KBH0C8AZ42PO',\r\n        secret: 'w7kvrnnCNVjBzjdR'\r\n      });\r\n    };\r\n\r\n    const onConnect = async() => {\r\n      await onProvisioning();\r\n      await onCreateLocalMedia();\r\n      await onCreateConference();\r\n      await conf.value.connect(confName.value);\r\n\r\n      myId.value = conf.value.localParticipant.id;\r\n      // myId.value = usersInfo.userInfo.lrnerNm;\r\n      isConnected.value = true;\r\n      conf.value.publish([localMedia.value]);\r\n\r\n      audioCheckInterval.value = window.setInterval(()=>{\r\n        const audioLevels = conf.value.getRemoteAudioLevels();\r\n        audioLevels.remoteParticipants.forEach((audioParticipant)=>{\r\n          const participant = remoteParticipants.value.find(participant => participant.participant.id === audioParticipant.remoteParticipant.id);\r\n          let level = parseFloat(audioParticipant.level.toFixed(3));\r\n          if(level > 0.15) {\r\n            level = 0.15;\r\n          }\r\n          participant.level = level / 0.15 * 100;\r\n        });\r\n      }, 250);\r\n    }\r\n\r\n    const onCreateLocalMedia = async() => {\r\n      localMedia.value = await ConnectLive.createLocalMedia({\r\n        audio: true,\r\n        video: true\r\n      });\r\n      console.log(conf.value)\r\n      // await onCreateLocalMedi aCallback();\r\n      nextTick(async() => {\r\n        const video = localMedia.value.video.attach();\r\n        video.className = 'local-video';\r\n        video.style.width = '100%';\r\n        video.muted = true;\r\n        video.autoplay = true;\r\n        video.controls = true;\r\n        document.querySelector('.local-container').appendChild(video);\r\n\r\n        cameraDevices.value = await localMedia.value.getCameraDevices();\r\n      });\r\n    }\r\n\r\n    const onCreateConference = async() => {\r\n      conf.value = ConnectLive.createConference();\r\n\r\n      conf.value.on('connected', (evt)=>{\r\n        // 기존 참여자 배열을 순회하며 비디오 구독 및 엘리먼트 생성\r\n        evt.remoteParticipants.forEach(async participant => {\r\n          let remoteVideos = [];\r\n          const unsubscribedVideos = participant.getUnsubscribedVideos();\r\n          if (unsubscribedVideos.length) {\r\n            const videoIds = unsubscribedVideos.map(video => {\r\n              video.getVideoId();\r\n            });\r\n\r\n            remoteVideos = await conf.value.subscribe(videoIds);\r\n          }\r\n\r\n          remoteParticipants.value.push({\r\n            participant: participant,\r\n            videos: remoteVideos,\r\n            level: 0\r\n          });\r\n          console.log('connected participant;;;;',participant);\r\n          console.log('connected remoteParticipants;;;;',remoteParticipants.value);\r\n        });\r\n      });\r\n\r\n      conf.value.on('participantEntered', (evt)=>{\r\n        remoteParticipants.value.push({\r\n          participant: evt.remoteParticipant,\r\n          videos: [],\r\n          level: 0\r\n        });\r\n        console.log('participantEntered remoteParticipants;;;;',remoteParticipants.value);\r\n      });\r\n\r\n      conf.value.on('participantLeft', evt => {\r\n        const index = remoteParticipants.value.findIndex(item => item.participant.id === evt.remoteParticipantId);\r\n        remoteParticipants.value.splice(index, 1);\r\n      });\r\n\r\n      conf.value.on('remoteVideoPublished', async evt => {\r\n        const remoteVideos = await conf.value.subscribe([evt.remoteVideo.videoId]);\r\n        if (remoteVideos.length) {\r\n          const participant = remoteParticipants.value.find(item => item.participant.id === evt.remoteParticipant.id);\r\n          if(participant) {\r\n            participant.videos = participant.videos.concat(remoteVideos);\r\n            participant.lrnerNm = userInfo.value.lrnerNm;\r\n          }\r\n        }\r\n      });\r\n\r\n      conf.value.on('remoteVideoUnpublished', evt => {\r\n        const participant = remoteParticipants.value.find(item => item.participant.id === evt.remoteParticipant.id);\r\n        if(participant) {\r\n          participant.videos = participant.videos.filter((remoteVideo)=>{\r\n            return remoteVideo.videoId !== evt.remoteVideo.videoId;\r\n          });\r\n        }\r\n      });\r\n    };\r\n\r\n    const onDisConnectConference = async() => {\r\n      conf.value.disconnect();\r\n\r\n      localMedia.value.stop();\r\n      localMedia.value.video.detach();\r\n\r\n      localMedia.value = null;\r\n\r\n      if(localScreen.value) {\r\n        localScreen.value.stop();\r\n        localScreen.value.video.detach();\r\n        localScreen.value = null;\r\n      }\r\n\r\n      isConnected.value = false;\r\n      myId.value = '';\r\n      remoteParticipants.value = [];\r\n      window.clearInterval(audioCheckInterval.value);\r\n      audioCheckInterval.value = -1;\r\n\r\n      ConnectLive.signOut();\r\n    };\r\n\r\n    // 화면공유\r\n    const onCreateLocalScreen = async() => {\r\n      localScreen.value = await ConnectLive.createLocalScreen({\r\n        audio: true,\r\n        video: true\r\n      });\r\n      localScreen.value.video.setExtraValue('screen');\r\n\r\n      const video = localScreen.value.video.attach();\r\n      video.className = 'local-video';\r\n      video.style.width = '100%';\r\n      document.querySelector('.local-container').appendChild(video);\r\n      conf.value.publish([localScreen.value]);\r\n    };\r\n    \r\n    const onDestroyLocalScreen = async() => {\r\n      localScreen.value.video.detach();\r\n      localScreen.value.stop();\r\n\r\n      conf.value.unpublish([localScreen.value]);\r\n\r\n      localScreen.value = undefined;\r\n    };\r\n\r\n    // const onChangeCamera = async() => {\r\n    //   localMedia.value.video.detach();\r\n    //\r\n    //   const camaraSource = document.getElementById('camaraSource');\r\n    //   await localMedia.value.switchCamera(camaraSource.value);\r\n    //\r\n    //   const video = localMedia.value.video.attach();\r\n    //   video.className = 'local-video';\r\n    //   video.style.width = '100%';\r\n    //   document.querySelector('.local-container').appendChild(video);\r\n    // };\r\n\r\n    // const onClickSpotlight = async(event) => {\r\n    //   const target = event.target;\r\n    //   const remoteParticipant = conf.value.remoteParticipants.find(participant => participant.id === target.dataset.participantid);\r\n    //   if (remoteParticipant) {\r\n    //     const t = remoteParticipant.getVideo(parseInt(target.dataset.videoid));\r\n    //     t.setQuality('h');\r\n    //   }\r\n    //   document.getElementById('spotlight-video').srcObject = target.srcObject;\r\n    // };\r\n\r\n    return {\r\n      userInfo,\r\n      confName,\r\n      conf,\r\n      localMedia,\r\n      localScreen,\r\n      remoteParticipants,\r\n      isConnected,\r\n      myId,\r\n      cameraDevices,\r\n      audioCheckInterval,\r\n\r\n      onConnect,\r\n      onProvisioning,\r\n      onCreateLocalMedia,\r\n      onCreateLocalScreen,\r\n      onCreateConference,\r\n      onDisConnectConference,\r\n      onDestroyLocalScreen,\r\n      // onClickSpotlight,\r\n      // onChangeCamera,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  background-color: black;\r\n  left: 0;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  /*background-color: #101523;*/\r\n  color: #fff;\r\n}\r\n\r\ninput {\r\n  line-height: 1.5;\r\n  padding: 8px;\r\n  border: 1px solid hsl(0, 0%, 10%);\r\n  color: #fff;\r\n  background: hsl(0, 0%, 14%);\r\n  transition: background-color 0.3s cubic-bezier(0.57, 0.21, 0.69, 1.25),\r\n  transform 0.3s cubic-bezier(0.57, 0.21, 0.69, 1.25);\r\n}\r\n\r\nbutton {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  color: #fff;\r\n  border: 0;\r\n  cursor: pointer;\r\n  margin: 10px;\r\n  padding: 10px;\r\n}\r\n\r\nvideo {\r\n  cursor: pointer;\r\n}\r\n\r\n/*.flex {*/\r\n/*  display: flex;*/\r\n/*  flex: 1;*/\r\n/*  height: 100%;*/\r\n/*}*/\r\n\r\n/*.flex.column {*/\r\n/*  flex-direction: column;*/\r\n/*}*/\r\n\r\n/*.flex.row {*/\r\n/*  flex-direction: row;*/\r\n/*}*/\r\n\r\nheader {\r\n  height: 55px;\r\n  padding: 3px 20px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  text-align: left;\r\n}\r\n\r\n.spotlight {\r\n  width: 100%;\r\n  padding: 10px;\r\n}\r\n\r\n.spotlight video {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.media-list {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n\r\n  /*width: 300px;*/\r\n  padding: 10px;\r\n  border-right: 1px solid rgba(255, 255, 255, 0.1);\r\n  overflow: auto;\r\n}\r\n\r\n.media-list .media-block {\r\n  width: 250px;\r\n  height: fit-content;\r\n\r\n  position: relative;\r\n  margin-top: 5px;\r\n  padding: 10px;\r\n  border: 1px solid #c9c9c9;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.participant-id {\r\n  position: absolute;\r\n  bottom: 5px;\r\n  left: 5px;\r\n  color: #fff;\r\n  font-size: 12px;\r\n}\r\n</style>","import { render } from \"./LiveConference.vue?vue&type=template&id=3711e481&scoped=true\"\nimport script from \"./LiveConference.vue?vue&type=script&lang=js\"\nexport * from \"./LiveConference.vue?vue&type=script&lang=js\"\n\nimport \"./LiveConference.vue?vue&type=style&index=0&id=3711e481&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\user\\\\IdeaProjects\\\\chat-sample2\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3711e481\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","$setup","_toDisplayString","deptNm","lrnerNm","_hoisted_6","_Fragment","_renderList","item","i","key","id","participant","_createVNode","_component_voice_meter","level","videos","video","j","_createBlock","_component_remote_video","autoplay","controls","remoteVideo","name","components","voiceMeter","setup","confName","ref","conf","localMedia","localScreen","remoteParticipants","isConnected","myId","cameraDevices","audioCheckInterval","userInfo","route","useRoute","init","value","JSON","parse","decodeURIComponent","atob","query","params","channelNo","accessType","onConnect","setTimeout","onMounted","console","log","onUnmounted","onDisConnectConference","onProvisioning","async","ConnectLive","serviceId","serviceKey","secret","onCreateLocalMedia","onCreateConference","connect","localParticipant","publish","window","setInterval","audioLevels","getRemoteAudioLevels","forEach","audioParticipant","find","remoteParticipant","parseFloat","toFixed","audio","nextTick","attach","className","style","width","muted","document","querySelector","appendChild","getCameraDevices","on","evt","remoteVideos","unsubscribedVideos","getUnsubscribedVideos","length","videoIds","map","getVideoId","subscribe","push","index","findIndex","remoteParticipantId","splice","videoId","concat","filter","disconnect","stop","detach","clearInterval","onCreateLocalScreen","setExtraValue","onDestroyLocalScreen","unpublish","undefined","__exports__","render"],"sourceRoot":""}