{"version":3,"file":"js/981.9c9f1eb8.js","mappings":"yeACOA,MAAM,WAAWC,GAAG,Y,GAElBD,MAAM,kBAAkBC,GAAG,a,GACzBD,MAAM,iB,GAEDA,MAAM,gB,uXASPA,MAAM,6B,UACTE,EAAAA,EAAAA,GAEM,OAFDF,MAAM,eAAa,EACtBE,EAAAA,EAAAA,GAAoC,QAA9BF,MAAM,QAAO,eADrB,K,GAGKA,MAAM,W,GACHA,MAAM,Q,UACZE,EAAAA,EAAAA,GAEM,OAFDF,MAAM,aAAW,EACpBE,EAAAA,EAAAA,GAAsE,OAAjEC,IAAAC,EAAmDC,IAAI,YAD9D,K,GAODL,MAAM,c,GAEJA,MAAM,gB,GAEJA,MAAM,e,uhBAmBJA,MAAM,gB,SAEmCA,MAAM,gB,gmDAChDM,G,GAsEGN,MAAM,kB,UACTE,EAAAA,EAAAA,GAAkG,UAA1FF,MAAM,iBAAe,EAACE,EAAAA,EAAAA,GAA8B,KAA3BF,MAAM,oBAAqBE,EAAAA,EAAAA,GAA6B,QAAvBF,MAAM,QAAO,SAA/E,K,UACiDE,EAAAA,EAAAA,GAAyB,KAAtBF,MAAM,aAAW,W,UAAKE,EAAAA,EAAAA,GAA4B,QAAtBF,MAAM,QAAO,MAAE,K,GAA9CO,EAAyBC,G,GAM3ER,MAAM,gB,GACJA,MAAM,wB,GACJA,MAAM,e,GACLA,MAAM,uBAAuBS,IAAI,gB,GAKlCT,MAAM,c,igBAmBJA,MAAM,oB,UAMsCE,EAAAA,EAAAA,GAA4B,QAAtBF,MAAM,QAAO,MAAE,K,GAArBU,G,0EApKjEC,EAAAA,EAAAA,IAiLM,MAjLN,EAiLM,EA/KJT,EAAAA,EAAAA,GA6KM,MA7KN,EA6KM,EA5KJA,EAAAA,EAAAA,GA2KM,MA3KN,EA2KM,EAzKJA,EAAAA,EAAAA,GAoBS,SApBT,EAoBS,CAnBPU,GAQAV,EAAAA,EAAAA,GAUM,MAVN,EAUM,CATJW,GAGAX,EAAAA,EAAAA,GAKM,MALN,EAKM,EAJJA,EAAAA,EAAAA,GAA8C,OAA9C,GAA8CY,EAAAA,EAAAA,IAAzBC,EAAAA,SAASC,SAAO,GACrCC,SAONf,EAAAA,EAAAA,GAiJM,MAjJN,EAiJM,EA/IJA,EAAAA,EAAAA,GA6IM,MA7IN,EA6IM,EA3IJA,EAAAA,EAAAA,GAiGM,MAjGN,EAiGM,CA/FJgB,GAiBAhB,EAAAA,EAAAA,GA6EM,MA7EN,EA6EM,CA3E0B,UAAnBa,EAAAA,SAASI,aAAU,WAA9BR,EAAAA,EAAAA,IAoEM,MApEN,EAoEMS,KApEN,gBAuEAlB,EAAAA,EAAAA,GAGM,MAHN,EAGM,CAFJmB,GACAnB,EAAAA,EAAAA,GAA+G,UAAvGF,MAAM,WAAYsB,QAAK,oBAAEP,EAAAA,gBAAAA,EAAAA,kBAAAA,KAAjC,UAMNb,EAAAA,EAAAA,GAqCM,MArCN,EAqCM,EApCJA,EAAAA,EAAAA,GAmCM,MAnCN,EAmCM,EAlCJA,EAAAA,EAAAA,GAKM,MALN,EAKM,EAJJA,EAAAA,EAAAA,GAGK,KAHL,EAGK,gBADHS,EAAAA,EAAAA,IAAoKY,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAAjIT,EAAAA,QAAM,CAApBU,EAAMC,M,WAA3BC,EAAAA,EAAAA,IAAoKC,EAAA,CAAxHC,IAAKH,EAAMI,KAAML,EAAKK,KAAOC,QAASN,EAAKM,QAAU,aAAYN,EAAKT,QAAU,YAAWS,EAAKO,UAA5I,8DAFF,QAKF9B,EAAAA,EAAAA,GA2BM,MA3BN,EA2BM,CA1BJ+B,GAkBA/B,EAAAA,EAAAA,GAOM,MAPN,EAOM,WANJA,EAAAA,EAAAA,GAIE,SAJK4B,KAAK,OAAOI,YAAY,S,qCACfnB,EAAAA,aAAYoB,GACpBC,QAAK,+BAAQrB,EAAAA,aAAAA,EAAAA,eAAAA,IAAW,YAAnB,oBACEA,EAAAA,cAAAA,EAAAA,gBAAAA,MAHf,iBACgBA,EAAAA,iBAIhBb,EAAAA,EAAAA,GAAoF,UAA5EF,MAAM,YAAasB,QAAK,oBAAEP,EAAAA,aAAAA,EAAAA,eAAAA,KAAlC,qB,uBCrKpB,MAAMsB,EAAeC,OAAOC,OAAO,MACnCF,EAAa,QAAU,IACvBA,EAAa,SAAW,IACxBA,EAAa,QAAU,IACvBA,EAAa,QAAU,IACvBA,EAAa,WAAa,IAC1BA,EAAa,WAAa,IAC1BA,EAAa,QAAU,IACvB,MAAMG,EAAuBF,OAAOC,OAAO,MAC3CD,OAAOG,KAAKJ,GAAcK,SAAQb,IAC9BW,EAAqBH,EAAaR,IAAQA,KAE9C,MAAMc,EAAe,CAAEb,KAAM,QAASc,KAAM,gBCXtCC,EAAiC,oBAATC,MACT,qBAATA,MACqC,6BAAzCR,OAAOS,UAAUC,SAASC,KAAKH,MACjCI,EAA+C,oBAAhBC,YAE/BC,EAASC,GAC0B,oBAAvBF,YAAYC,OACpBD,YAAYC,OAAOC,GACnBA,GAAOA,EAAIC,kBAAkBH,YAEjCI,EAAe,EAAGzB,KAAAA,EAAMc,KAAAA,GAAQY,EAAgBC,IAC9CZ,GAAkBD,aAAgBE,KAC9BU,EACOC,EAASb,GAGTc,EAAmBd,EAAMa,GAG/BP,IACJN,aAAgBO,aAAeC,EAAOR,IACnCY,EACOC,EAASb,GAGTc,EAAmB,IAAIZ,KAAK,CAACF,IAAQa,GAI7CA,EAASpB,EAAaP,IAASc,GAAQ,KAE5Cc,EAAqB,CAACd,EAAMa,KAC9B,MAAME,EAAa,IAAIC,WAKvB,OAJAD,EAAWE,OAAS,WAChB,MAAMC,EAAUH,EAAWI,OAAOC,MAAM,KAAK,GAC7CP,EAAS,IAAMK,IAEZH,EAAWM,cAAcrB,IAEpC,QCxCA,MAAMsB,EAAQ,mEAERC,GAA+B,qBAAfC,WAA6B,GAAK,IAAIA,WAAW,KACvE,IAAK,IAAIC,GAAI,EAAGA,GAAIH,EAAMI,OAAQD,KAC9BF,GAAOD,EAAMK,WAAWF,KAAMA,GAE3B,MAgBMG,GAAUC,IACnB,IAA8DJ,EAAUK,EAAUC,EAAUC,EAAUC,EAAlGC,EAA+B,IAAhBL,EAAOH,OAAeS,EAAMN,EAAOH,OAAWU,EAAI,EACnC,MAA9BP,EAAOA,EAAOH,OAAS,KACvBQ,IACkC,MAA9BL,EAAOA,EAAOH,OAAS,IACvBQ,KAGR,MAAMG,EAAc,IAAI9B,YAAY2B,GAAeI,EAAQ,IAAId,WAAWa,GAC1E,IAAKZ,EAAI,EAAGA,EAAIU,EAAKV,GAAK,EACtBK,EAAWP,GAAOM,EAAOF,WAAWF,IACpCM,EAAWR,GAAOM,EAAOF,WAAWF,EAAI,IACxCO,EAAWT,GAAOM,EAAOF,WAAWF,EAAI,IACxCQ,EAAWV,GAAOM,EAAOF,WAAWF,EAAI,IACxCa,EAAMF,KAAQN,GAAY,EAAMC,GAAY,EAC5CO,EAAMF,MAAoB,GAAXL,IAAkB,EAAMC,GAAY,EACnDM,EAAMF,MAAoB,EAAXJ,IAAiB,EAAiB,GAAXC,EAE1C,OAAOI,GCtCL,GAA+C,oBAAhB9B,YAC/BgC,GAAe,CAACC,EAAeC,KACjC,GAA6B,kBAAlBD,EACP,MAAO,CACHtD,KAAM,UACNc,KAAM0C,GAAUF,EAAeC,IAGvC,MAAMvD,EAAOsD,EAAcG,OAAO,GAClC,GAAa,MAATzD,EACA,MAAO,CACHA,KAAM,UACNc,KAAM4C,GAAmBJ,EAAcK,UAAU,GAAIJ,IAG7D,MAAMK,EAAalD,EAAqBV,GACxC,OAAK4D,EAGEN,EAAcd,OAAS,EACxB,CACExC,KAAMU,EAAqBV,GAC3Bc,KAAMwC,EAAcK,UAAU,IAEhC,CACE3D,KAAMU,EAAqBV,IARxBa,GAWT6C,GAAqB,CAAC5C,EAAMyC,KAC9B,GAAI,GAAuB,CACvB,MAAMM,EAAUnB,GAAO5B,GACvB,OAAO0C,GAAUK,EAASN,GAG1B,MAAO,CAAEZ,QAAQ,EAAM7B,KAAAA,IAGzB0C,GAAY,CAAC1C,EAAMyC,KACrB,OAAQA,GACJ,IAAK,OACD,OAAOzC,aAAgBO,YAAc,IAAIL,KAAK,CAACF,IAASA,EAC5D,IAAK,cACL,QACI,OAAOA,IAGnB,UC9CA,MAAMgD,GAAYC,OAAOC,aAAa,IAChCC,GAAgB,CAACC,EAASvC,KAE5B,MAAMa,EAAS0B,EAAQ1B,OACjB2B,EAAiB,IAAIC,MAAM5B,GACjC,IAAI6B,EAAQ,EACZH,EAAQtD,SAAQ,CAAC0D,EAAQ/B,KAErB,EAAa+B,GAAQ,GAAOhB,IACxBa,EAAe5B,GAAKe,IACde,IAAU7B,GACZb,EAASwC,EAAeI,KAAKT,YAKvCU,GAAgB,CAACC,EAAgBlB,KACnC,MAAMY,EAAiBM,EAAevC,MAAM4B,IACtCI,EAAU,GAChB,IAAK,IAAI3B,EAAI,EAAGA,EAAI4B,EAAe3B,OAAQD,IAAK,CAC5C,MAAMmC,EAAgB,GAAaP,EAAe5B,GAAIgB,GAEtD,GADAW,EAAQS,KAAKD,GACc,UAAvBA,EAAc1E,KACd,MAGR,OAAOkE,GAEEU,GAAW,ECxBjB,SAASC,GAAQtD,GACtB,GAAIA,EAAK,OAAOuD,GAAMvD,GAWxB,SAASuD,GAAMvD,GACb,IAAK,IAAIxB,KAAO8E,GAAQ5D,UACtBM,EAAIxB,GAAO8E,GAAQ5D,UAAUlB,GAE/B,OAAOwB,EAYTsD,GAAQ5D,UAAU8D,GAClBF,GAAQ5D,UAAU+D,iBAAmB,SAASC,EAAOC,GAInD,OAHAC,KAAKC,WAAaD,KAAKC,YAAc,IACpCD,KAAKC,WAAW,IAAMH,GAASE,KAAKC,WAAW,IAAMH,IAAU,IAC7DN,KAAKO,GACDC,MAaTN,GAAQ5D,UAAUoE,KAAO,SAASJ,EAAOC,GACvC,SAASH,IACPI,KAAKG,IAAIL,EAAOF,GAChBG,EAAGK,MAAMJ,KAAMK,WAKjB,OAFAT,EAAGG,GAAKA,EACRC,KAAKJ,GAAGE,EAAOF,GACRI,MAaTN,GAAQ5D,UAAUqE,IAClBT,GAAQ5D,UAAUwE,eAClBZ,GAAQ5D,UAAUyE,mBAClBb,GAAQ5D,UAAU0E,oBAAsB,SAASV,EAAOC,GAItD,GAHAC,KAAKC,WAAaD,KAAKC,YAAc,GAGjC,GAAKI,UAAUhD,OAEjB,OADA2C,KAAKC,WAAa,GACXD,KAIT,IAUIS,EAVAC,EAAYV,KAAKC,WAAW,IAAMH,GACtC,IAAKY,EAAW,OAAOV,KAGvB,GAAI,GAAKK,UAAUhD,OAEjB,cADO2C,KAAKC,WAAW,IAAMH,GACtBE,KAKT,IAAK,IAAI5C,EAAI,EAAGA,EAAIsD,EAAUrD,OAAQD,IAEpC,GADAqD,EAAKC,EAAUtD,GACXqD,IAAOV,GAAMU,EAAGV,KAAOA,EAAI,CAC7BW,EAAUC,OAAOvD,EAAG,GACpB,MAUJ,OAJyB,IAArBsD,EAAUrD,eACL2C,KAAKC,WAAW,IAAMH,GAGxBE,MAWTN,GAAQ5D,UAAU8E,KAAO,SAASd,GAChCE,KAAKC,WAAaD,KAAKC,YAAc,GAKrC,IAHA,IAAIY,EAAO,IAAI5B,MAAMoB,UAAUhD,OAAS,GACpCqD,EAAYV,KAAKC,WAAW,IAAMH,GAE7B1C,EAAI,EAAGA,EAAIiD,UAAUhD,OAAQD,IACpCyD,EAAKzD,EAAI,GAAKiD,UAAUjD,GAG1B,GAAIsD,EAAW,CACbA,EAAYA,EAAUI,MAAM,GACnB1D,EAAI,EAAb,IAAK,IAAWU,EAAM4C,EAAUrD,OAAQD,EAAIU,IAAOV,EACjDsD,EAAUtD,GAAGgD,MAAMJ,KAAMa,GAI7B,OAAOb,MAITN,GAAQ5D,UAAUiF,aAAerB,GAAQ5D,UAAU8E,KAUnDlB,GAAQ5D,UAAUkF,UAAY,SAASlB,GAErC,OADAE,KAAKC,WAAaD,KAAKC,YAAc,GAC9BD,KAAKC,WAAW,IAAMH,IAAU,IAWzCJ,GAAQ5D,UAAUmF,aAAe,SAASnB,GACxC,QAAUE,KAAKgB,UAAUlB,GAAOzC,QCvK3B,MAAM6D,GAAiB,KACN,qBAATC,KACAA,KAEgB,qBAAXC,OACLA,OAGAC,SAAS,cAATA,GARe,GCCvB,SAASC,GAAKlF,KAAQmF,GACzB,OAAOA,EAAKC,QAAO,CAACC,EAAKC,KACjBtF,EAAIuF,eAAeD,KACnBD,EAAIC,GAAKtF,EAAIsF,IAEVD,IACR,IAGP,MAAMG,GAAqBC,WACrBC,GAAuBC,aACtB,SAASC,GAAsB5F,EAAK6F,GACnCA,EAAKC,iBACL9F,EAAI+F,aAAeP,GAAmBQ,KAAK,IAC3ChG,EAAIiG,eAAiBP,GAAqBM,KAAK,MAG/ChG,EAAI+F,aAAeN,WAAWO,KAAK,IACnChG,EAAIiG,eAAiBN,aAAaK,KAAK,KAI/C,MAAME,GAAkB,KAEjB,SAASC,GAAWnG,GACvB,MAAmB,kBAARA,EACAoG,GAAWpG,GAGfqG,KAAKC,MAAMtG,EAAImG,YAAcnG,EAAIuG,MAAQL,IAEpD,SAASE,GAAWI,GAChB,IAAIC,EAAI,EAAGxF,EAAS,EACpB,IAAK,IAAID,EAAI,EAAG0F,EAAIF,EAAIvF,OAAQD,EAAI0F,EAAG1F,IACnCyF,EAAID,EAAItF,WAAWF,GACfyF,EAAI,IACJxF,GAAU,EAELwF,EAAI,KACTxF,GAAU,EAELwF,EAAI,OAAUA,GAAK,MACxBxF,GAAU,GAGVD,IACAC,GAAU,GAGlB,OAAOA,EC/CX,MAAM0F,WAAuBC,MACzBC,YAAYC,EAAQC,EAAaC,GAC7BC,MAAMH,GACNlD,KAAKmD,YAAcA,EACnBnD,KAAKoD,QAAUA,EACfpD,KAAKnF,KAAO,kBAGb,MAAMyI,WAAkB5D,GAO3BuD,YAAYhB,GACRoB,QACArD,KAAKuD,UAAW,EAChBvB,GAAsBhC,KAAMiC,GAC5BjC,KAAKiC,KAAOA,EACZjC,KAAKwD,MAAQvB,EAAKuB,MAClBxD,KAAKyD,WAAa,GAClBzD,KAAK0D,OAASzB,EAAKyB,OAWvBC,QAAQT,EAAQC,EAAaC,GAEzB,OADAC,MAAMtC,aAAa,QAAS,IAAIgC,GAAeG,EAAQC,EAAaC,IAC7DpD,KAOX4D,OAKI,MAJI,WAAa5D,KAAKyD,YAAc,KAAOzD,KAAKyD,aAC5CzD,KAAKyD,WAAa,UAClBzD,KAAK6D,UAEF7D,KAOX8D,QAKI,MAJI,YAAc9D,KAAKyD,YAAc,SAAWzD,KAAKyD,aACjDzD,KAAK+D,UACL/D,KAAKgE,WAEFhE,KAQXiE,KAAKlF,GACG,SAAWiB,KAAKyD,YAChBzD,KAAKkE,MAAMnF,GAWnBoF,SACInE,KAAKyD,WAAa,OAClBzD,KAAKuD,UAAW,EAChBF,MAAMtC,aAAa,QAQvBqD,OAAOzI,GACH,MAAMwD,EAAS,GAAaxD,EAAMqE,KAAK0D,OAAOtF,YAC9C4B,KAAKqE,SAASlF,GAOlBkF,SAASlF,GACLkE,MAAMtC,aAAa,SAAU5B,GAOjC6E,QAAQM,GACJtE,KAAKyD,WAAa,SAClBJ,MAAMtC,aAAa,QAASuD,IC/GpC,MAAMC,GAAW,mEAAmExH,MAAM,IAAK,GAAS,GAAIyH,GAAM,GAClH,IAAqBC,GAAjBC,GAAO,EAAGtH,GAAI,EAQX,SAAS,GAAOuH,GACnB,IAAIC,EAAU,GACd,GACIA,EAAUL,GAASI,EAAM,IAAUC,EACnCD,EAAMlC,KAAKoC,MAAMF,EAAM,UAClBA,EAAM,GACf,OAAOC,EAsBJ,SAASE,KACZ,MAAMC,EAAM,IAAQ,IAAIC,MACxB,OAAID,IAAQN,IACDC,GAAO,EAAGD,GAAOM,GACrBA,EAAM,IAAM,GAAOL,MAK9B,KAAOtH,GAAI,GAAQA,KACfoH,GAAID,GAASnH,KAAMA,GCzChB,SAAS,GAAOhB,GACnB,IAAIwG,EAAM,GACV,IAAK,IAAIxF,KAAKhB,EACNA,EAAIuF,eAAevE,KACfwF,EAAIvF,SACJuF,GAAO,KACXA,GAAOqC,mBAAmB7H,GAAK,IAAM6H,mBAAmB7I,EAAIgB,KAGpE,OAAOwF,EAQJ,SAAS,GAAOsC,GACnB,IAAIC,EAAM,GACNC,EAAQF,EAAGnI,MAAM,KACrB,IAAK,IAAIK,EAAI,EAAG0F,EAAIsC,EAAM/H,OAAQD,EAAI0F,EAAG1F,IAAK,CAC1C,IAAIiI,EAAOD,EAAMhI,GAAGL,MAAM,KAC1BoI,EAAIG,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,IAE/D,OAAOF,EC/BX,IAAII,IAAQ,EACZ,IACIA,GAAkC,qBAAnBC,gBACX,oBAAqB,IAAIA,eAEjC,MAAOC,KAIA,MAAMC,GAAUH,GCPhB,SAASI,GAAI1D,GAChB,MAAM2D,EAAU3D,EAAK2D,QAErB,IACI,GAAI,qBAAuBJ,kBAAoBI,GAAWF,IACtD,OAAO,IAAIF,eAGnB,MAAOK,IACP,IAAKD,EACD,IACI,OAAO,IAAI,GAAW,CAAC,UAAUE,OAAO,UAAU1G,KAAK,OAAM,qBAEjE,MAAOyG,KCRf,SAASE,MACT,MAAMC,GAAU,WACZ,MAAMC,EAAM,IAAI,GAAe,CAC3BL,SAAS,IAEb,OAAO,MAAQK,EAAIC,aAJP,GAMT,MAAMC,WAAgB7C,GAOzBL,YAAYhB,GAGR,GAFAoB,MAAMpB,GACNjC,KAAKoG,SAAU,EACS,qBAAbC,SAA0B,CACjC,MAAMC,EAAQ,WAAaD,SAAS5G,SACpC,IAAI8G,EAAOF,SAASE,KAEfA,IACDA,EAAOD,EAAQ,MAAQ,MAE3BtG,KAAKwG,GACoB,qBAAbH,UACJpE,EAAKwE,WAAaJ,SAASI,UAC3BF,IAAStE,EAAKsE,KACtBvG,KAAK0G,GAAKzE,EAAK0E,SAAWL,EAK9B,MAAMM,EAAc3E,GAAQA,EAAK2E,YACjC5G,KAAKzD,eAAiByJ,KAAYY,EAKlCC,WACA,MAAO,UAQXhD,SACI7D,KAAK8G,OAQTC,MAAMC,GACFhH,KAAKyD,WAAa,UAClB,MAAMsD,EAAQ,KACV/G,KAAKyD,WAAa,SAClBuD,KAEJ,GAAIhH,KAAKoG,UAAYpG,KAAKuD,SAAU,CAChC,IAAI0D,EAAQ,EACRjH,KAAKoG,UACLa,IACAjH,KAAKE,KAAK,gBAAgB,aACpB+G,GAASF,QAGd/G,KAAKuD,WACN0D,IACAjH,KAAKE,KAAK,SAAS,aACb+G,GAASF,aAKnBA,IAQRD,OACI9G,KAAKoG,SAAU,EACfpG,KAAKkH,SACLlH,KAAKe,aAAa,QAOtBqD,OAAOzI,GACH,MAAMa,EAAW2C,IAMb,GAJI,YAAca,KAAKyD,YAA8B,SAAhBtE,EAAOtE,MACxCmF,KAAKmE,SAGL,UAAYhF,EAAOtE,KAEnB,OADAmF,KAAKgE,QAAQ,CAAEb,YAAa,oCACrB,EAGXnD,KAAKqE,SAASlF,IAGlBE,GAAc1D,EAAMqE,KAAK0D,OAAOtF,YAAY3C,QAAQe,GAEhD,WAAawD,KAAKyD,aAElBzD,KAAKoG,SAAU,EACfpG,KAAKe,aAAa,gBACd,SAAWf,KAAKyD,YAChBzD,KAAK8G,QAWjB/C,UACI,MAAMD,EAAQ,KACV9D,KAAKkE,MAAM,CAAC,CAAErJ,KAAM,YAEpB,SAAWmF,KAAKyD,WAChBK,IAKA9D,KAAKE,KAAK,OAAQ4D,GAU1BI,MAAMnF,GACFiB,KAAKuD,UAAW,EAChBzE,GAAcC,GAASpD,IACnBqE,KAAKmH,QAAQxL,GAAM,KACfqE,KAAKuD,UAAW,EAChBvD,KAAKe,aAAa,eAS9BqG,MACI,IAAI5D,EAAQxD,KAAKwD,OAAS,GAC1B,MAAM6D,EAASrH,KAAKiC,KAAK0E,OAAS,QAAU,OAC5C,IAAIJ,EAAO,IAEP,IAAUvG,KAAKiC,KAAKqF,oBACpB9D,EAAMxD,KAAKiC,KAAKsF,gBAAkBzC,MAEjC9E,KAAKzD,gBAAmBiH,EAAMgE,MAC/BhE,EAAMiE,IAAM,GAGZzH,KAAKiC,KAAKsE,OACR,UAAYc,GAAqC,MAA3BK,OAAO1H,KAAKiC,KAAKsE,OACpC,SAAWc,GAAqC,KAA3BK,OAAO1H,KAAKiC,KAAKsE,SAC3CA,EAAO,IAAMvG,KAAKiC,KAAKsE,MAE3B,MAAMoB,EAAe,GAAOnE,GACtBoE,GAA4C,IAArC5H,KAAKiC,KAAKwE,SAASoB,QAAQ,KACxC,OAAQR,EACJ,OACCO,EAAO,IAAM5H,KAAKiC,KAAKwE,SAAW,IAAMzG,KAAKiC,KAAKwE,UACnDF,EACAvG,KAAKiC,KAAK6F,MACTH,EAAatK,OAAS,IAAMsK,EAAe,IAQpDI,QAAQ9F,EAAO,IAEX,OADA5G,OAAO2M,OAAO/F,EAAM,CAAEuE,GAAIxG,KAAKwG,GAAIE,GAAI1G,KAAK0G,IAAM1G,KAAKiC,MAChD,IAAIgG,GAAQjI,KAAKoH,MAAOnF,GASnCkF,QAAQxL,EAAMoE,GACV,MAAMmI,EAAMlI,KAAK+H,QAAQ,CACrBI,OAAQ,OACRxM,KAAMA,IAEVuM,EAAItI,GAAG,UAAWG,GAClBmI,EAAItI,GAAG,SAAS,CAACwI,EAAWhF,KACxBpD,KAAK2D,QAAQ,iBAAkByE,EAAWhF,MAQlD8D,SACI,MAAMgB,EAAMlI,KAAK+H,UACjBG,EAAItI,GAAG,OAAQI,KAAKoE,OAAOhC,KAAKpC,OAChCkI,EAAItI,GAAG,SAAS,CAACwI,EAAWhF,KACxBpD,KAAK2D,QAAQ,iBAAkByE,EAAWhF,MAE9CpD,KAAKqI,QAAUH,GAGhB,MAAMD,WAAgBvI,GAOzBuD,YAAYmE,EAAKnF,GACboB,QACArB,GAAsBhC,KAAMiC,GAC5BjC,KAAKiC,KAAOA,EACZjC,KAAKmI,OAASlG,EAAKkG,QAAU,MAC7BnI,KAAKoH,IAAMA,EACXpH,KAAKsI,OAAQ,IAAUrG,EAAKqG,MAC5BtI,KAAKrE,UAAO4M,IAActG,EAAKtG,KAAOsG,EAAKtG,KAAO,KAClDqE,KAAK1E,SAOTA,SACI,MAAM2G,EAAOX,GAAKtB,KAAKiC,KAAM,QAAS,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,aACjHA,EAAK2D,UAAY5F,KAAKiC,KAAKuE,GAC3BvE,EAAKuG,UAAYxI,KAAKiC,KAAKyE,GAC3B,MAAMT,EAAOjG,KAAKiG,IAAM,IAAI,GAAehE,GAC3C,IACIgE,EAAIrC,KAAK5D,KAAKmI,OAAQnI,KAAKoH,IAAKpH,KAAKsI,OACrC,IACI,GAAItI,KAAKiC,KAAKwG,aAAc,CACxBxC,EAAIyC,uBAAyBzC,EAAIyC,uBAAsB,GACvD,IAAK,IAAItL,KAAK4C,KAAKiC,KAAKwG,aAChBzI,KAAKiC,KAAKwG,aAAa9G,eAAevE,IACtC6I,EAAI0C,iBAAiBvL,EAAG4C,KAAKiC,KAAKwG,aAAarL,KAK/D,MAAOyI,IACP,GAAI,SAAW7F,KAAKmI,OAChB,IACIlC,EAAI0C,iBAAiB,eAAgB,4BAEzC,MAAO9C,IAEX,IACII,EAAI0C,iBAAiB,SAAU,OAEnC,MAAO9C,IAEH,oBAAqBI,IACrBA,EAAI2C,gBAAkB5I,KAAKiC,KAAK2G,iBAEhC5I,KAAKiC,KAAK4G,iBACV5C,EAAI6C,QAAU9I,KAAKiC,KAAK4G,gBAE5B5C,EAAI8C,mBAAqB,KACjB,IAAM9C,EAAIxC,aAEV,MAAQwC,EAAI+C,QAAU,OAAS/C,EAAI+C,OACnChJ,KAAKiJ,SAKLjJ,KAAKmC,cAAa,KACdnC,KAAK2D,QAA8B,kBAAfsC,EAAI+C,OAAsB/C,EAAI+C,OAAS,KAC5D,KAGX/C,EAAIhC,KAAKjE,KAAKrE,MAElB,MAAOkK,GAOH,YAHA7F,KAAKmC,cAAa,KACdnC,KAAK2D,QAAQkC,KACd,GAGiB,qBAAbqD,WACPlJ,KAAKmJ,MAAQlB,GAAQmB,gBACrBnB,GAAQoB,SAASrJ,KAAKmJ,OAASnJ,MAQvC2D,QAAQ8B,GACJzF,KAAKe,aAAa,QAAS0E,EAAKzF,KAAKiG,KACrCjG,KAAKsJ,SAAQ,GAOjBA,QAAQC,GACJ,GAAI,qBAAuBvJ,KAAKiG,KAAO,OAASjG,KAAKiG,IAArD,CAIA,GADAjG,KAAKiG,IAAI8C,mBAAqBhD,GAC1BwD,EACA,IACIvJ,KAAKiG,IAAIuD,QAEb,MAAO3D,IAEa,qBAAbqD,iBACAjB,GAAQoB,SAASrJ,KAAKmJ,OAEjCnJ,KAAKiG,IAAM,MAOfgD,SACI,MAAMtN,EAAOqE,KAAKiG,IAAIwD,aACT,OAAT9N,IACAqE,KAAKe,aAAa,OAAQpF,GAC1BqE,KAAKe,aAAa,WAClBf,KAAKsJ,WAQbE,QACIxJ,KAAKsJ,WAUb,GAPArB,GAAQmB,cAAgB,EACxBnB,GAAQoB,SAAW,GAMK,qBAAbH,SAEP,GAA2B,oBAAhBQ,YAEPA,YAAY,WAAYC,SAEvB,GAAgC,oBAArB9J,iBAAiC,CAC7C,MAAM+J,EAAmB,eAAgB,GAAa,WAAa,SACnE/J,iBAAiB+J,EAAkBD,IAAe,GAG1D,SAASA,KACL,IAAK,IAAIvM,KAAK6K,GAAQoB,SACdpB,GAAQoB,SAAS1H,eAAevE,IAChC6K,GAAQoB,SAASjM,GAAGoM,QC9YzB,MAAMK,GAAW,MACpB,MAAMC,EAAwC,oBAAZC,SAAqD,oBAApBA,QAAQC,QAC3E,OAAIF,EACOrJ,GAAMsJ,QAAQC,UAAUC,KAAKxJ,GAG7B,CAACA,EAAI0B,IAAiBA,EAAa1B,EAAI,IAN9B,GASXyJ,GAAY,cAAwB,gBACpCC,IAAwB,EACxBC,GAAoB,cCL3BC,GAAqC,qBAAdC,WACI,kBAAtBA,UAAUC,SACmB,gBAApCD,UAAUC,QAAQC,cACf,MAAMC,WAAWnH,GAOpBL,YAAYhB,GACRoB,MAAMpB,GACNjC,KAAKzD,gBAAkB0F,EAAK2E,YAO5BC,WACA,MAAO,YAOXhD,SACI,IAAK7D,KAAK0K,QAEN,OAEJ,MAAMtD,EAAMpH,KAAKoH,MACXuD,EAAY3K,KAAKiC,KAAK0I,UAEtB1I,EAAOoI,GACP,GACA/I,GAAKtB,KAAKiC,KAAM,QAAS,oBAAqB,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,eAAgB,kBAAmB,SAAU,aAAc,SAAU,uBAChMjC,KAAKiC,KAAKwG,eACVxG,EAAK2I,QAAU5K,KAAKiC,KAAKwG,cAE7B,IACIzI,KAAK6K,GACDV,KAA0BE,GACpBM,EACI,IAAIT,GAAU9C,EAAKuD,GACnB,IAAIT,GAAU9C,GAClB,IAAI8C,GAAU9C,EAAKuD,EAAW1I,GAE5C,MAAOwD,IACH,OAAOzF,KAAKe,aAAa,QAAS0E,IAEtCzF,KAAK6K,GAAGzM,WAAa4B,KAAK0D,OAAOtF,YAAcgM,GAC/CpK,KAAK8K,oBAOTA,oBACI9K,KAAK6K,GAAGE,OAAS,KACT/K,KAAKiC,KAAK+I,WACVhL,KAAK6K,GAAGI,QAAQC,QAEpBlL,KAAKmE,UAETnE,KAAK6K,GAAGM,QAAUC,GAAcpL,KAAKgE,QAAQ,CACzCb,YAAa,8BACbC,QAASgI,IAEbpL,KAAK6K,GAAGQ,UAAYC,GAAMtL,KAAKoE,OAAOkH,EAAG3P,MACzCqE,KAAK6K,GAAGU,QAAU1F,GAAK7F,KAAK2D,QAAQ,kBAAmBkC,GAQ3D3B,MAAMnF,GACFiB,KAAKuD,UAAW,EAGhB,IAAK,IAAInG,EAAI,EAAGA,EAAI2B,EAAQ1B,OAAQD,IAAK,CACrC,MAAM+B,EAASJ,EAAQ3B,GACjBoO,EAAapO,IAAM2B,EAAQ1B,OAAS,EAC1C,EAAa8B,EAAQa,KAAKzD,gBAAgBZ,IAEtC,MAAMsG,EAAO,GACb,IAAKkI,KACGhL,EAAOsM,UACPxJ,EAAKyJ,SAAWvM,EAAOsM,QAAQC,UAE/B1L,KAAKiC,KAAK0J,mBAAmB,CAC7B,MAAM7N,EAEN,kBAAoBnC,EAAOiQ,OAAOrJ,WAAW5G,GAAQA,EAAK0B,OACtDS,EAAMkC,KAAKiC,KAAK0J,kBAAkBE,YAClC5J,EAAKyJ,UAAW,GAO5B,IACQvB,GAEAnK,KAAK6K,GAAG5G,KAAKtI,GAGbqE,KAAK6K,GAAG5G,KAAKtI,EAAMsG,GAG3B,MAAO4D,IAEH2F,GAGA3B,IAAS,KACL7J,KAAKuD,UAAW,EAChBvD,KAAKe,aAAa,WACnBf,KAAKmC,kBAUxB4B,UAC2B,qBAAZ/D,KAAK6K,KACZ7K,KAAK6K,GAAG/G,QACR9D,KAAK6K,GAAK,MAQlBzD,MACI,IAAI5D,EAAQxD,KAAKwD,OAAS,GAC1B,MAAM6D,EAASrH,KAAKiC,KAAK0E,OAAS,MAAQ,KAC1C,IAAIJ,EAAO,GAEPvG,KAAKiC,KAAKsE,OACR,QAAUc,GAAqC,MAA3BK,OAAO1H,KAAKiC,KAAKsE,OAClC,OAASc,GAAqC,KAA3BK,OAAO1H,KAAKiC,KAAKsE,SACzCA,EAAO,IAAMvG,KAAKiC,KAAKsE,MAGvBvG,KAAKiC,KAAKqF,oBACV9D,EAAMxD,KAAKiC,KAAKsF,gBAAkBzC,MAGjC9E,KAAKzD,iBACNiH,EAAMiE,IAAM,GAEhB,MAAME,EAAe,GAAOnE,GACtBoE,GAA4C,IAArC5H,KAAKiC,KAAKwE,SAASoB,QAAQ,KACxC,OAAQR,EACJ,OACCO,EAAO,IAAM5H,KAAKiC,KAAKwE,SAAW,IAAMzG,KAAKiC,KAAKwE,UACnDF,EACAvG,KAAKiC,KAAK6F,MACTH,EAAatK,OAAS,IAAMsK,EAAe,IAQpD+C,QACI,QAASR,ICvLV,MAAM4B,GAAa,CACtBC,UAAWtB,GACXrE,QAASD,ICGP6F,GAAK,0OACLC,GAAQ,CACV,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,UAElI,SAASC,GAAMtJ,GAClB,MAAM1J,EAAM0J,EAAKuJ,EAAIvJ,EAAIiF,QAAQ,KAAMhC,EAAIjD,EAAIiF,QAAQ,MAC7C,GAANsE,IAAiB,GAANtG,IACXjD,EAAMA,EAAIpE,UAAU,EAAG2N,GAAKvJ,EAAIpE,UAAU2N,EAAGtG,GAAGuG,QAAQ,KAAM,KAAOxJ,EAAIpE,UAAUqH,EAAGjD,EAAIvF,SAE9F,IAAIgP,EAAIL,GAAGM,KAAK1J,GAAO,IAAKwE,EAAM,GAAIhK,EAAI,GAC1C,MAAOA,IACHgK,EAAI6E,GAAM7O,IAAMiP,EAAEjP,IAAM,GAU5B,OARU,GAAN+O,IAAiB,GAANtG,IACXuB,EAAImF,OAASrT,EACbkO,EAAIoF,KAAOpF,EAAIoF,KAAKhO,UAAU,EAAG4I,EAAIoF,KAAKnP,OAAS,GAAG+O,QAAQ,KAAM,KACpEhF,EAAIqF,UAAYrF,EAAIqF,UAAUL,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,KAAM,KAC9EhF,EAAIsF,SAAU,GAElBtF,EAAIuF,UAAYA,GAAUvF,EAAKA,EAAI,SACnCA,EAAIwF,SAAWA,GAASxF,EAAKA,EAAI,UAC1BA,EAEX,SAASuF,GAAUvQ,EAAK0L,GACpB,MAAM+E,EAAO,WAAYC,EAAQhF,EAAKsE,QAAQS,EAAM,KAAK9P,MAAM,KAO/D,MANyB,KAArB+K,EAAKiF,OAAO,EAAG,IAA6B,IAAhBjF,EAAKzK,QACjCyP,EAAMnM,OAAO,EAAG,GAEmB,KAAnCmH,EAAKiF,OAAOjF,EAAKzK,OAAS,EAAG,IAC7ByP,EAAMnM,OAAOmM,EAAMzP,OAAS,EAAG,GAE5ByP,EAEX,SAASF,GAASxF,EAAK5D,GACnB,MAAM7H,EAAO,GAMb,OALA6H,EAAM4I,QAAQ,6BAA6B,SAAUY,EAAIC,EAAIC,GACrDD,IACAtR,EAAKsR,GAAMC,MAGZvR,ECzCJ,MAAMwR,WAAezN,GAQxBuD,YAAYmE,EAAKnF,EAAO,IACpBoB,QACI+D,GAAO,kBAAoBA,IAC3BnF,EAAOmF,EACPA,EAAM,MAENA,GACAA,EAAM8E,GAAM9E,GACZnF,EAAKwE,SAAWW,EAAIoF,KACpBvK,EAAK0E,OAA0B,UAAjBS,EAAI3H,UAAyC,QAAjB2H,EAAI3H,SAC9CwC,EAAKsE,KAAOa,EAAIb,KACZa,EAAI5D,QACJvB,EAAKuB,MAAQ4D,EAAI5D,QAEhBvB,EAAKuK,OACVvK,EAAKwE,SAAWyF,GAAMjK,EAAKuK,MAAMA,MAErCxK,GAAsBhC,KAAMiC,GAC5BjC,KAAK2G,OACD,MAAQ1E,EAAK0E,OACP1E,EAAK0E,OACe,qBAAbN,UAA4B,WAAaA,SAAS5G,SAC/DwC,EAAKwE,WAAaxE,EAAKsE,OAEvBtE,EAAKsE,KAAOvG,KAAK2G,OAAS,MAAQ,MAEtC3G,KAAKyG,SACDxE,EAAKwE,WACoB,qBAAbJ,SAA2BA,SAASI,SAAW,aAC/DzG,KAAKuG,KACDtE,EAAKsE,OACoB,qBAAbF,UAA4BA,SAASE,KACvCF,SAASE,KACTvG,KAAK2G,OACD,MACA,MAClB3G,KAAK8L,WAAa7J,EAAK6J,YAAc,CAAC,UAAW,aACjD9L,KAAKyD,WAAa,GAClBzD,KAAKoN,YAAc,GACnBpN,KAAKqN,cAAgB,EACrBrN,KAAKiC,KAAO5G,OAAO2M,OAAO,CACtBF,KAAM,aACNwF,OAAO,EACP1E,iBAAiB,EACjB2E,SAAS,EACThG,eAAgB,IAChBiG,iBAAiB,EACjBC,oBAAoB,EACpB9B,kBAAmB,CACfE,UAAW,MAEf6B,iBAAkB,GAClBC,qBAAqB,GACtB1L,GACHjC,KAAKiC,KAAK6F,KAAO9H,KAAKiC,KAAK6F,KAAKsE,QAAQ,MAAO,IAAM,IACtB,kBAApBpM,KAAKiC,KAAKuB,QACjBxD,KAAKiC,KAAKuB,MAAQ,GAAOxD,KAAKiC,KAAKuB,QAGvCxD,KAAKhH,GAAK,KACVgH,KAAK4N,SAAW,KAChB5N,KAAK6N,aAAe,KACpB7N,KAAK8N,YAAc,KAEnB9N,KAAK+N,iBAAmB,KACQ,oBAArBlO,mBACHG,KAAKiC,KAAK0L,qBAIV9N,iBAAiB,gBAAgB,KACzBG,KAAKgO,YAELhO,KAAKgO,UAAUzN,qBACfP,KAAKgO,UAAUlK,YAEpB,GAEe,cAAlB9D,KAAKyG,WACLzG,KAAKiO,qBAAuB,KACxBjO,KAAKgE,QAAQ,kBAAmB,CAC5Bb,YAAa,6BAGrBtD,iBAAiB,UAAWG,KAAKiO,sBAAsB,KAG/DjO,KAAK4D,OASTsK,gBAAgBrH,GACZ,MAAMrD,EAAQnI,OAAO2M,OAAO,GAAIhI,KAAKiC,KAAKuB,OAE1CA,EAAM2K,IAAM1O,GAEZ+D,EAAMwK,UAAYnH,EAEd7G,KAAKhH,KACLwK,EAAMgE,IAAMxH,KAAKhH,IACrB,MAAMiJ,EAAO5G,OAAO2M,OAAO,GAAIhI,KAAKiC,KAAKyL,iBAAiB7G,GAAO7G,KAAKiC,KAAM,CACxEuB,MAAAA,EACAE,OAAQ1D,KACRyG,SAAUzG,KAAKyG,SACfE,OAAQ3G,KAAK2G,OACbJ,KAAMvG,KAAKuG,OAEf,OAAO,IAAIuF,GAAWjF,GAAM5E,GAOhC2B,OACI,IAAIoK,EACJ,GAAIhO,KAAKiC,KAAKuL,iBACVL,GAAOiB,wBACmC,IAA1CpO,KAAK8L,WAAWjE,QAAQ,aACxBmG,EAAY,gBAEX,IAAI,IAAMhO,KAAK8L,WAAWzO,OAK3B,YAHA2C,KAAKmC,cAAa,KACdnC,KAAKe,aAAa,QAAS,6BAC5B,GAIHiN,EAAYhO,KAAK8L,WAAW,GAEhC9L,KAAKyD,WAAa,UAElB,IACIuK,EAAYhO,KAAKkO,gBAAgBF,GAErC,MAAOnI,GAGH,OAFA7F,KAAK8L,WAAWuC,aAChBrO,KAAK4D,OAGToK,EAAUpK,OACV5D,KAAKsO,aAAaN,GAOtBM,aAAaN,GACLhO,KAAKgO,WACLhO,KAAKgO,UAAUzN,qBAGnBP,KAAKgO,UAAYA,EAEjBA,EACKpO,GAAG,QAASI,KAAKuO,QAAQnM,KAAKpC,OAC9BJ,GAAG,SAAUI,KAAKqE,SAASjC,KAAKpC,OAChCJ,GAAG,QAASI,KAAK2D,QAAQvB,KAAKpC,OAC9BJ,GAAG,SAASsD,GAAUlD,KAAKgE,QAAQ,kBAAmBd,KAQ/DsL,MAAM3H,GACF,IAAImH,EAAYhO,KAAKkO,gBAAgBrH,GACjC4H,GAAS,EACbtB,GAAOiB,uBAAwB,EAC/B,MAAMM,EAAkB,KAChBD,IAEJT,EAAU/J,KAAK,CAAC,CAAEpJ,KAAM,OAAQc,KAAM,WACtCqS,EAAU9N,KAAK,UAAUyO,IACrB,IAAIF,EAEJ,GAAI,SAAWE,EAAI9T,MAAQ,UAAY8T,EAAIhT,KAAM,CAG7C,GAFAqE,KAAK4O,WAAY,EACjB5O,KAAKe,aAAa,YAAaiN,IAC1BA,EACD,OACJb,GAAOiB,sBAAwB,cAAgBJ,EAAUnH,KACzD7G,KAAKgO,UAAUjH,OAAM,KACb0H,GAEA,WAAazO,KAAKyD,aAEtB6F,IACAtJ,KAAKsO,aAAaN,GAClBA,EAAU/J,KAAK,CAAC,CAAEpJ,KAAM,aACxBmF,KAAKe,aAAa,UAAWiN,GAC7BA,EAAY,KACZhO,KAAK4O,WAAY,EACjB5O,KAAK6O,gBAGR,CACD,MAAMpJ,EAAM,IAAIzC,MAAM,eAEtByC,EAAIuI,UAAYA,EAAUnH,KAC1B7G,KAAKe,aAAa,eAAgB0E,SAI9C,SAASqJ,IACDL,IAGJA,GAAS,EACTnF,IACA0E,EAAUlK,QACVkK,EAAY,MAGhB,MAAMzC,EAAU9F,IACZ,MAAMsJ,EAAQ,IAAI/L,MAAM,gBAAkByC,GAE1CsJ,EAAMf,UAAYA,EAAUnH,KAC5BiI,IACA9O,KAAKe,aAAa,eAAgBgO,IAEtC,SAASC,IACLzD,EAAQ,oBAGZ,SAASJ,IACLI,EAAQ,iBAGZ,SAAS0D,EAAUC,GACXlB,GAAakB,EAAGrI,OAASmH,EAAUnH,MACnCiI,IAIR,MAAMxF,EAAU,KACZ0E,EAAU1N,eAAe,OAAQoO,GACjCV,EAAU1N,eAAe,QAASiL,GAClCyC,EAAU1N,eAAe,QAAS0O,GAClChP,KAAKG,IAAI,QAASgL,GAClBnL,KAAKG,IAAI,YAAa8O,IAE1BjB,EAAU9N,KAAK,OAAQwO,GACvBV,EAAU9N,KAAK,QAASqL,GACxByC,EAAU9N,KAAK,QAAS8O,GACxBhP,KAAKE,KAAK,QAASiL,GACnBnL,KAAKE,KAAK,YAAa+O,GACvBjB,EAAUpK,OAOdO,SAOI,GANAnE,KAAKyD,WAAa,OAClB0J,GAAOiB,sBAAwB,cAAgBpO,KAAKgO,UAAUnH,KAC9D7G,KAAKe,aAAa,QAClBf,KAAK6O,QAGD,SAAW7O,KAAKyD,YAChBzD,KAAKiC,KAAKsL,SACVvN,KAAKgO,UAAUjH,MAAO,CACtB,IAAI3J,EAAI,EACR,MAAM0F,EAAI9C,KAAK4N,SAASvQ,OACxB,KAAOD,EAAI0F,EAAG1F,IACV4C,KAAKwO,MAAMxO,KAAK4N,SAASxQ,KASrCiH,SAASlF,GACL,GAAI,YAAca,KAAKyD,YACnB,SAAWzD,KAAKyD,YAChB,YAAczD,KAAKyD,WAInB,OAHAzD,KAAKe,aAAa,SAAU5B,GAE5Ba,KAAKe,aAAa,aACV5B,EAAOtE,MACX,IAAK,OACDmF,KAAKmP,YAAYC,KAAKlD,MAAM/M,EAAOxD,OACnC,MACJ,IAAK,OACDqE,KAAKqP,mBACLrP,KAAKsP,WAAW,QAChBtP,KAAKe,aAAa,QAClBf,KAAKe,aAAa,QAClB,MACJ,IAAK,QACD,MAAM0E,EAAM,IAAIzC,MAAM,gBAEtByC,EAAI8J,KAAOpQ,EAAOxD,KAClBqE,KAAK2D,QAAQ8B,GACb,MACJ,IAAK,UACDzF,KAAKe,aAAa,OAAQ5B,EAAOxD,MACjCqE,KAAKe,aAAa,UAAW5B,EAAOxD,MACpC,OAYhBwT,YAAYxT,GACRqE,KAAKe,aAAa,YAAapF,GAC/BqE,KAAKhH,GAAK2C,EAAK6L,IACfxH,KAAKgO,UAAUxK,MAAMgE,IAAM7L,EAAK6L,IAChCxH,KAAK4N,SAAW5N,KAAKwP,eAAe7T,EAAKiS,UACzC5N,KAAK6N,aAAelS,EAAKkS,aACzB7N,KAAK8N,YAAcnS,EAAKmS,YACxB9N,KAAKyP,WAAa9T,EAAK8T,WACvBzP,KAAKmE,SAED,WAAanE,KAAKyD,YAEtBzD,KAAKqP,mBAOTA,mBACIrP,KAAKqC,eAAerC,KAAK+N,kBACzB/N,KAAK+N,iBAAmB/N,KAAKmC,cAAa,KACtCnC,KAAKgE,QAAQ,kBACdhE,KAAK6N,aAAe7N,KAAK8N,aACxB9N,KAAKiC,KAAK+I,WACVhL,KAAK+N,iBAAiB7C,QAQ9BqD,UACIvO,KAAKoN,YAAYzM,OAAO,EAAGX,KAAKqN,eAIhCrN,KAAKqN,cAAgB,EACjB,IAAMrN,KAAKoN,YAAY/P,OACvB2C,KAAKe,aAAa,SAGlBf,KAAK6O,QAQbA,QACI,GAAI,WAAa7O,KAAKyD,YAClBzD,KAAKgO,UAAUzK,WACdvD,KAAK4O,WACN5O,KAAKoN,YAAY/P,OAAQ,CACzB,MAAM0B,EAAUiB,KAAK0P,qBACrB1P,KAAKgO,UAAU/J,KAAKlF,GAGpBiB,KAAKqN,cAAgBtO,EAAQ1B,OAC7B2C,KAAKe,aAAa,UAS1B2O,qBACI,MAAMC,EAAyB3P,KAAKyP,YACR,YAAxBzP,KAAKgO,UAAUnH,MACf7G,KAAKoN,YAAY/P,OAAS,EAC9B,IAAKsS,EACD,OAAO3P,KAAKoN,YAEhB,IAAIwC,EAAc,EAClB,IAAK,IAAIxS,EAAI,EAAGA,EAAI4C,KAAKoN,YAAY/P,OAAQD,IAAK,CAC9C,MAAMzB,EAAOqE,KAAKoN,YAAYhQ,GAAGzB,KAIjC,GAHIA,IACAiU,GAAerN,GAAW5G,IAE1ByB,EAAI,GAAKwS,EAAc5P,KAAKyP,WAC5B,OAAOzP,KAAKoN,YAAYtM,MAAM,EAAG1D,GAErCwS,GAAe,EAEnB,OAAO5P,KAAKoN,YAWhBlJ,MAAMyK,EAAKlD,EAAS1L,GAEhB,OADAC,KAAKsP,WAAW,UAAWX,EAAKlD,EAAS1L,GAClCC,KAEXiE,KAAK0K,EAAKlD,EAAS1L,GAEf,OADAC,KAAKsP,WAAW,UAAWX,EAAKlD,EAAS1L,GAClCC,KAWXsP,WAAWzU,EAAMc,EAAM8P,EAAS1L,GAS5B,GARI,oBAAsBpE,IACtBoE,EAAKpE,EACLA,OAAO4M,GAEP,oBAAsBkD,IACtB1L,EAAK0L,EACLA,EAAU,MAEV,YAAczL,KAAKyD,YAAc,WAAazD,KAAKyD,WACnD,OAEJgI,EAAUA,GAAW,GACrBA,EAAQC,UAAW,IAAUD,EAAQC,SACrC,MAAMvM,EAAS,CACXtE,KAAMA,EACNc,KAAMA,EACN8P,QAASA,GAEbzL,KAAKe,aAAa,eAAgB5B,GAClCa,KAAKoN,YAAY5N,KAAKL,GAClBY,GACAC,KAAKE,KAAK,QAASH,GACvBC,KAAK6O,QAOT/K,QACI,MAAMA,EAAQ,KACV9D,KAAKgE,QAAQ,gBACbhE,KAAKgO,UAAUlK,SAEb+L,EAAkB,KACpB7P,KAAKG,IAAI,UAAW0P,GACpB7P,KAAKG,IAAI,eAAgB0P,GACzB/L,KAEEgM,EAAiB,KAEnB9P,KAAKE,KAAK,UAAW2P,GACrB7P,KAAKE,KAAK,eAAgB2P,IAqB9B,MAnBI,YAAc7P,KAAKyD,YAAc,SAAWzD,KAAKyD,aACjDzD,KAAKyD,WAAa,UACdzD,KAAKoN,YAAY/P,OACjB2C,KAAKE,KAAK,SAAS,KACXF,KAAK4O,UACLkB,IAGAhM,OAIH9D,KAAK4O,UACVkB,IAGAhM,KAGD9D,KAOX2D,QAAQ8B,GACJ0H,GAAOiB,uBAAwB,EAC/BpO,KAAKe,aAAa,QAAS0E,GAC3BzF,KAAKgE,QAAQ,kBAAmByB,GAOpCzB,QAAQd,EAAQC,GACR,YAAcnD,KAAKyD,YACnB,SAAWzD,KAAKyD,YAChB,YAAczD,KAAKyD,aAEnBzD,KAAKqC,eAAerC,KAAK+N,kBAEzB/N,KAAKgO,UAAUzN,mBAAmB,SAElCP,KAAKgO,UAAUlK,QAEf9D,KAAKgO,UAAUzN,qBACoB,oBAAxBC,qBACPA,oBAAoB,UAAWR,KAAKiO,sBAAsB,GAG9DjO,KAAKyD,WAAa,SAElBzD,KAAKhH,GAAK,KAEVgH,KAAKe,aAAa,QAASmC,EAAQC,GAGnCnD,KAAKoN,YAAc,GACnBpN,KAAKqN,cAAgB,GAU7BmC,eAAe5B,GACX,MAAMmC,EAAmB,GACzB,IAAI3S,EAAI,EACR,MAAM4S,EAAIpC,EAASvQ,OACnB,KAAOD,EAAI4S,EAAG5S,KACL4C,KAAK8L,WAAWjE,QAAQ+F,EAASxQ,KAClC2S,EAAiBvQ,KAAKoO,EAASxQ,IAEvC,OAAO2S,GAGf5C,GAAO1N,SAAWA,GChkBM0N,GAAO1N,SCQxB,SAASwQ,GAAI7I,EAAKU,EAAO,GAAIoI,GAChC,IAAI9T,EAAMgL,EAEV8I,EAAMA,GAA4B,qBAAb7J,UAA4BA,SAC7C,MAAQe,IACRA,EAAM8I,EAAIzQ,SAAW,KAAOyQ,EAAI1D,MAEjB,kBAARpF,IACH,MAAQA,EAAI9I,OAAO,KAEf8I,EADA,MAAQA,EAAI9I,OAAO,GACb4R,EAAIzQ,SAAW2H,EAGf8I,EAAI1D,KAAOpF,GAGpB,sBAAsB+I,KAAK/I,KAExBA,EADA,qBAAuB8I,EACjBA,EAAIzQ,SAAW,KAAO2H,EAGtB,WAAaA,GAI3BhL,EAAM8P,GAAM9E,IAGXhL,EAAImK,OACD,cAAc4J,KAAK/T,EAAIqD,UACvBrD,EAAImK,KAAO,KAEN,eAAe4J,KAAK/T,EAAIqD,YAC7BrD,EAAImK,KAAO,QAGnBnK,EAAI0L,KAAO1L,EAAI0L,MAAQ,IACvB,MAAMF,GAAkC,IAA3BxL,EAAIoQ,KAAK3E,QAAQ,KACxB2E,EAAO5E,EAAO,IAAMxL,EAAIoQ,KAAO,IAAMpQ,EAAIoQ,KAS/C,OAPApQ,EAAIpD,GAAKoD,EAAIqD,SAAW,MAAQ+M,EAAO,IAAMpQ,EAAImK,KAAOuB,EAExD1L,EAAIgU,KACAhU,EAAIqD,SACA,MACA+M,GACC0D,GAAOA,EAAI3J,OAASnK,EAAImK,KAAO,GAAK,IAAMnK,EAAImK,MAChDnK,ECzDX,MAAM,GAA+C,oBAAhBF,YAC/B,GAAUE,GACyB,oBAAvBF,YAAYC,OACpBD,YAAYC,OAAOC,GACnBA,EAAIC,kBAAkBH,YAE1B,GAAWb,OAAOS,UAAUC,SAC5B,GAAiC,oBAATF,MACT,qBAATA,MACoB,6BAAxB,GAASG,KAAKH,MAChBwU,GAAiC,oBAATC,MACT,qBAATA,MACoB,6BAAxB,GAAStU,KAAKsU,MAMf,SAASC,GAASnU,GACrB,OAAS,KAA0BA,aAAeF,aAAe,GAAOE,KACnE,IAAkBA,aAAeP,MACjCwU,IAAkBjU,aAAekU,KAEnC,SAASE,GAAUpU,EAAKqU,GAC3B,IAAKrU,GAAsB,kBAARA,EACf,OAAO,EAEX,GAAI6C,MAAMyR,QAAQtU,GAAM,CACpB,IAAK,IAAIgB,EAAI,EAAG0F,EAAI1G,EAAIiB,OAAQD,EAAI0F,EAAG1F,IACnC,GAAIoT,GAAUpU,EAAIgB,IACd,OAAO,EAGf,OAAO,EAEX,GAAImT,GAASnU,GACT,OAAO,EAEX,GAAIA,EAAIqU,QACkB,oBAAfrU,EAAIqU,QACU,IAArBpQ,UAAUhD,OACV,OAAOmT,GAAUpU,EAAIqU,UAAU,GAEnC,IAAK,MAAM7V,KAAOwB,EACd,GAAIf,OAAOS,UAAU6F,eAAe3F,KAAKI,EAAKxB,IAAQ4V,GAAUpU,EAAIxB,IAChE,OAAO,EAGf,OAAO,ECxCJ,SAAS+V,GAAkBxR,GAC9B,MAAMyR,EAAU,GACVC,EAAa1R,EAAOxD,KACpBmV,EAAO3R,EAGb,OAFA2R,EAAKnV,KAAOoV,GAAmBF,EAAYD,GAC3CE,EAAKE,YAAcJ,EAAQvT,OACpB,CAAE8B,OAAQ2R,EAAMF,QAASA,GAEpC,SAASG,GAAmBpV,EAAMiV,GAC9B,IAAKjV,EACD,OAAOA,EACX,GAAI4U,GAAS5U,GAAO,CAChB,MAAMV,EAAc,CAAEgW,cAAc,EAAMtM,IAAKiM,EAAQvT,QAEvD,OADAuT,EAAQpR,KAAK7D,GACNV,EAEN,GAAIgE,MAAMyR,QAAQ/U,GAAO,CAC1B,MAAMuV,EAAU,IAAIjS,MAAMtD,EAAK0B,QAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIzB,EAAK0B,OAAQD,IAC7B8T,EAAQ9T,GAAK2T,GAAmBpV,EAAKyB,GAAIwT,GAE7C,OAAOM,EAEN,GAAoB,kBAATvV,KAAuBA,aAAgBqJ,MAAO,CAC1D,MAAMkM,EAAU,GAChB,IAAK,MAAMtW,KAAOe,EACVN,OAAOS,UAAU6F,eAAe3F,KAAKL,EAAMf,KAC3CsW,EAAQtW,GAAOmW,GAAmBpV,EAAKf,GAAMgW,IAGrD,OAAOM,EAEX,OAAOvV,EAUJ,SAASwV,GAAkBhS,EAAQyR,GAGtC,OAFAzR,EAAOxD,KAAOyV,GAAmBjS,EAAOxD,KAAMiV,GAC9CzR,EAAO6R,iBAAczI,EACdpJ,EAEX,SAASiS,GAAmBzV,EAAMiV,GAC9B,IAAKjV,EACD,OAAOA,EACX,GAAIA,GAAQA,EAAKsV,aACb,OAAOL,EAAQjV,EAAKgJ,KAEnB,GAAI1F,MAAMyR,QAAQ/U,GACnB,IAAK,IAAIyB,EAAI,EAAGA,EAAIzB,EAAK0B,OAAQD,IAC7BzB,EAAKyB,GAAKgU,GAAmBzV,EAAKyB,GAAIwT,QAGzC,GAAoB,kBAATjV,EACZ,IAAK,MAAMf,KAAOe,EACVN,OAAOS,UAAU6F,eAAe3F,KAAKL,EAAMf,KAC3Ce,EAAKf,GAAOwW,GAAmBzV,EAAKf,GAAMgW,IAItD,OAAOjV,ECjEJ,MAAM,GAAW,EACjB,IAAI0V,IACX,SAAWA,GACPA,EAAWA,EAAW,WAAa,GAAK,UACxCA,EAAWA,EAAW,cAAgB,GAAK,aAC3CA,EAAWA,EAAW,SAAW,GAAK,QACtCA,EAAWA,EAAW,OAAS,GAAK,MACpCA,EAAWA,EAAW,iBAAmB,GAAK,gBAC9CA,EAAWA,EAAW,gBAAkB,GAAK,eAC7CA,EAAWA,EAAW,cAAgB,GAAK,cAP/C,CAQGA,KAAeA,GAAa,KAIxB,MAAMC,GAMTrO,YAAYsO,GACRvR,KAAKuR,SAAWA,EAQpBC,OAAOpV,GACH,OAAIA,EAAIvB,OAASwW,GAAWI,OAASrV,EAAIvB,OAASwW,GAAWK,MACrDlB,GAAUpU,GAQX,CAAC4D,KAAK2R,eAAevV,KAPpBA,EAAIvB,KACAuB,EAAIvB,OAASwW,GAAWI,MAClBJ,GAAWO,aACXP,GAAWQ,WACd7R,KAAK8R,eAAe1V,IAQvCuV,eAAevV,GAEX,IAAIwG,EAAM,GAAKxG,EAAIvB,KAmBnB,OAjBIuB,EAAIvB,OAASwW,GAAWO,cACxBxV,EAAIvB,OAASwW,GAAWQ,aACxBjP,GAAOxG,EAAI4U,YAAc,KAIzB5U,EAAI2V,KAAO,MAAQ3V,EAAI2V,MACvBnP,GAAOxG,EAAI2V,IAAM,KAGjB,MAAQ3V,EAAIpD,KACZ4J,GAAOxG,EAAIpD,IAGX,MAAQoD,EAAIT,OACZiH,GAAOwM,KAAK4C,UAAU5V,EAAIT,KAAMqE,KAAKuR,WAElC3O,EAOXkP,eAAe1V,GACX,MAAM6V,EAAiBtB,GAAkBvU,GACnC0U,EAAO9Q,KAAK2R,eAAeM,EAAe9S,QAC1CyR,EAAUqB,EAAerB,QAE/B,OADAA,EAAQsB,QAAQpB,GACTF,GAQR,MAAMuB,WAAgBzS,GAMzBuD,YAAYmP,GACR/O,QACArD,KAAKoS,QAAUA,EAOnBC,IAAIjW,GACA,IAAI+C,EACJ,GAAmB,kBAAR/C,EACP+C,EAASa,KAAKsS,aAAalW,GACvB+C,EAAOtE,OAASwW,GAAWO,cAC3BzS,EAAOtE,OAASwW,GAAWQ,YAE3B7R,KAAKuS,cAAgB,IAAIC,GAAoBrT,GAElB,IAAvBA,EAAO6R,aACP3N,MAAMtC,aAAa,UAAW5B,IAKlCkE,MAAMtC,aAAa,UAAW5B,OAGjC,KAAIoR,GAASnU,KAAQA,EAAIoB,OAe1B,MAAM,IAAIwF,MAAM,iBAAmB5G,GAbnC,IAAK4D,KAAKuS,cACN,MAAM,IAAIvP,MAAM,oDAGhB7D,EAASa,KAAKuS,cAAcE,eAAerW,GACvC+C,IAEAa,KAAKuS,cAAgB,KACrBlP,MAAMtC,aAAa,UAAW5B,KAc9CmT,aAAa1P,GACT,IAAIxF,EAAI,EAER,MAAMW,EAAI,CACNlD,KAAM6M,OAAO9E,EAAItE,OAAO,KAE5B,QAA2BiK,IAAvB8I,GAAWtT,EAAElD,MACb,MAAM,IAAImI,MAAM,uBAAyBjF,EAAElD,MAG/C,GAAIkD,EAAElD,OAASwW,GAAWO,cACtB7T,EAAElD,OAASwW,GAAWQ,WAAY,CAClC,MAAMa,EAAQtV,EAAI,EAClB,MAA2B,MAApBwF,EAAItE,SAASlB,IAAcA,GAAKwF,EAAIvF,QAC3C,MAAMsV,EAAM/P,EAAIpE,UAAUkU,EAAOtV,GACjC,GAAIuV,GAAOjL,OAAOiL,IAA0B,MAAlB/P,EAAItE,OAAOlB,GACjC,MAAM,IAAI4F,MAAM,uBAEpBjF,EAAEiT,YAActJ,OAAOiL,GAG3B,GAAI,MAAQ/P,EAAItE,OAAOlB,EAAI,GAAI,CAC3B,MAAMsV,EAAQtV,EAAI,EAClB,QAASA,EAAG,CACR,MAAMyF,EAAID,EAAItE,OAAOlB,GACrB,GAAI,MAAQyF,EACR,MACJ,GAAIzF,IAAMwF,EAAIvF,OACV,MAERU,EAAEgU,IAAMnP,EAAIpE,UAAUkU,EAAOtV,QAG7BW,EAAEgU,IAAM,IAGZ,MAAMa,EAAOhQ,EAAItE,OAAOlB,EAAI,GAC5B,GAAI,KAAOwV,GAAQlL,OAAOkL,IAASA,EAAM,CACrC,MAAMF,EAAQtV,EAAI,EAClB,QAASA,EAAG,CACR,MAAMyF,EAAID,EAAItE,OAAOlB,GACrB,GAAI,MAAQyF,GAAK6E,OAAO7E,IAAMA,EAAG,GAC3BzF,EACF,MAEJ,GAAIA,IAAMwF,EAAIvF,OACV,MAERU,EAAE/E,GAAK0O,OAAO9E,EAAIpE,UAAUkU,EAAOtV,EAAI,IAG3C,GAAIwF,EAAItE,SAASlB,GAAI,CACjB,MAAMyV,EAAU7S,KAAK8S,SAASlQ,EAAImK,OAAO3P,IACzC,IAAI+U,GAAQY,eAAehV,EAAElD,KAAMgY,GAI/B,MAAM,IAAI7P,MAAM,mBAHhBjF,EAAEpC,KAAOkX,EAMjB,OAAO9U,EAEX+U,SAASlQ,GACL,IACI,OAAOwM,KAAKlD,MAAMtJ,EAAK5C,KAAKoS,SAEhC,MAAOvM,GACH,OAAO,GAGfmN,sBAAsBnY,EAAMgY,GACxB,OAAQhY,GACJ,KAAKwW,GAAW4B,QACZ,MAA0B,kBAAZJ,EAClB,KAAKxB,GAAW6B,WACZ,YAAmB3K,IAAZsK,EACX,KAAKxB,GAAW8B,cACZ,MAA0B,kBAAZN,GAA2C,kBAAZA,EACjD,KAAKxB,GAAWI,MAChB,KAAKJ,GAAWO,aACZ,OAAO3S,MAAMyR,QAAQmC,IAAYA,EAAQxV,OAAS,EACtD,KAAKgU,GAAWK,IAChB,KAAKL,GAAWQ,WACZ,OAAO5S,MAAMyR,QAAQmC,IAMjCO,UACQpT,KAAKuS,eACLvS,KAAKuS,cAAcc,0BAY/B,MAAMb,GACFvP,YAAY9D,GACRa,KAAKb,OAASA,EACda,KAAK4Q,QAAU,GACf5Q,KAAKsT,UAAYnU,EAUrBsT,eAAec,GAEX,GADAvT,KAAK4Q,QAAQpR,KAAK+T,GACdvT,KAAK4Q,QAAQvT,SAAW2C,KAAKsT,UAAUtC,YAAa,CAEpD,MAAM7R,EAASgS,GAAkBnR,KAAKsT,UAAWtT,KAAK4Q,SAEtD,OADA5Q,KAAKqT,yBACElU,EAEX,OAAO,KAKXkU,yBACIrT,KAAKsT,UAAY,KACjBtT,KAAK4Q,QAAU,IC1RhB,SAAShR,GAAGxD,EAAKkP,EAAIvL,GAExB,OADA3D,EAAIwD,GAAG0L,EAAIvL,GACJ,WACH3D,EAAI+D,IAAImL,EAAIvL,ICIpB,MAAMyT,GAAkBnY,OAAOoY,OAAO,CAClCC,QAAS,EACTC,cAAe,EACfC,WAAY,EACZC,cAAe,EAEfC,YAAa,EACbxT,eAAgB,IAEb,MAAM,WAAeZ,GAMxBuD,YAAY8Q,EAAIhC,EAAK9P,GACjBoB,QACArD,KAAKgU,WAAY,EACjBhU,KAAKiU,cAAgB,GACrBjU,KAAKkU,WAAa,GAClBlU,KAAKmU,IAAM,EACXnU,KAAKoU,KAAO,GACZpU,KAAKqU,MAAQ,GACbrU,KAAK+T,GAAKA,EACV/T,KAAK+R,IAAMA,EACP9P,GAAQA,EAAKqS,OACbtU,KAAKsU,KAAOrS,EAAKqS,MAEjBtU,KAAK+T,GAAGQ,cACRvU,KAAK4D,OAKT4Q,mBACA,OAAQxU,KAAKgU,UAOjBS,YACI,GAAIzU,KAAK0U,KACL,OACJ,MAAMX,EAAK/T,KAAK+T,GAChB/T,KAAK0U,KAAO,CACR9U,GAAGmU,EAAI,OAAQ/T,KAAK+K,OAAO3I,KAAKpC,OAChCJ,GAAGmU,EAAI,SAAU/T,KAAK2U,SAASvS,KAAKpC,OACpCJ,GAAGmU,EAAI,QAAS/T,KAAKuL,QAAQnJ,KAAKpC,OAClCJ,GAAGmU,EAAI,QAAS/T,KAAKmL,QAAQ/I,KAAKpC,QAMtC4U,aACA,QAAS5U,KAAK0U,KAOlBhB,UACI,OAAI1T,KAAKgU,YAEThU,KAAKyU,YACAzU,KAAK+T,GAAG,kBACT/T,KAAK+T,GAAGnQ,OACR,SAAW5D,KAAK+T,GAAGc,aACnB7U,KAAK+K,UALE/K,KAWf4D,OACI,OAAO5D,KAAK0T,UAQhBzP,QAAQpD,GAGJ,OAFAA,EAAKqR,QAAQ,WACblS,KAAKY,KAAKR,MAAMJ,KAAMa,GACfb,KASXY,KAAK0K,KAAOzK,GACR,GAAI2S,GAAgB7R,eAAe2J,GAC/B,MAAM,IAAItI,MAAM,IAAMsI,EAAK,8BAE/BzK,EAAKqR,QAAQ5G,GACb,MAAMnM,EAAS,CACXtE,KAAMwW,GAAWI,MACjB9V,KAAMkF,EAEV1B,QAAiB,IAGjB,GAFAA,EAAOsM,QAAQC,UAAmC,IAAxB1L,KAAKqU,MAAM3I,SAEjC,oBAAsB7K,EAAKA,EAAKxD,OAAS,GAAI,CAC7C,MAAMrE,EAAKgH,KAAKmU,MACVW,EAAMjU,EAAKkU,MACjB/U,KAAKgV,qBAAqBhc,EAAI8b,GAC9B3V,EAAOnG,GAAKA,EAEhB,MAAMic,EAAsBjV,KAAK+T,GAAGmB,QAChClV,KAAK+T,GAAGmB,OAAOlH,WACfhO,KAAK+T,GAAGmB,OAAOlH,UAAUzK,SACvB4R,EAAgBnV,KAAKqU,MAAMe,YAAcH,IAAwBjV,KAAKgU,WAW5E,OAVImB,IAEKnV,KAAKgU,WACVhU,KAAKqV,wBAAwBlW,GAC7Ba,KAAKb,OAAOA,IAGZa,KAAKkU,WAAW1U,KAAKL,IAEzBa,KAAKqU,MAAQ,GACNrU,KAKXgV,qBAAqBhc,EAAI8b,GACrB,MAAMhM,EAAU9I,KAAKqU,MAAMvL,QAC3B,QAAgBP,IAAZO,EAEA,YADA9I,KAAKoU,KAAKpb,GAAM8b,GAIpB,MAAMQ,EAAQtV,KAAK+T,GAAG5R,cAAa,YACxBnC,KAAKoU,KAAKpb,GACjB,IAAK,IAAIoE,EAAI,EAAGA,EAAI4C,KAAKkU,WAAW7W,OAAQD,IACpC4C,KAAKkU,WAAW9W,GAAGpE,KAAOA,GAC1BgH,KAAKkU,WAAWvT,OAAOvD,EAAG,GAGlC0X,EAAI9Y,KAAKgE,KAAM,IAAIgD,MAAM,8BAC1B8F,GACH9I,KAAKoU,KAAKpb,GAAM,IAAI6H,KAEhBb,KAAK+T,GAAG1R,eAAeiT,GACvBR,EAAI1U,MAAMJ,KAAM,CAAC,QAASa,KASlC1B,OAAOA,GACHA,EAAO4S,IAAM/R,KAAK+R,IAClB/R,KAAK+T,GAAGwB,QAAQpW,GAOpB4L,SAC4B,mBAAb/K,KAAKsU,KACZtU,KAAKsU,MAAM3Y,IACPqE,KAAKb,OAAO,CAAEtE,KAAMwW,GAAW4B,QAAStX,KAAAA,OAI5CqE,KAAKb,OAAO,CAAEtE,KAAMwW,GAAW4B,QAAStX,KAAMqE,KAAKsU,OAS3D/I,QAAQ9F,GACCzF,KAAKgU,WACNhU,KAAKe,aAAa,gBAAiB0E,GAU3C0F,QAAQjI,EAAQC,GACZnD,KAAKgU,WAAY,SACVhU,KAAKhH,GACZgH,KAAKe,aAAa,aAAcmC,EAAQC,GAQ5CwR,SAASxV,GACL,MAAMqW,EAAgBrW,EAAO4S,MAAQ/R,KAAK+R,IAC1C,GAAKyD,EAEL,OAAQrW,EAAOtE,MACX,KAAKwW,GAAW4B,QACZ,GAAI9T,EAAOxD,MAAQwD,EAAOxD,KAAK6L,IAAK,CAChC,MAAMxO,EAAKmG,EAAOxD,KAAK6L,IACvBxH,KAAKyV,UAAUzc,QAGfgH,KAAKe,aAAa,gBAAiB,IAAIiC,MAAM,8LAEjD,MACJ,KAAKqO,GAAWI,MAChB,KAAKJ,GAAWO,aACZ5R,KAAK0V,QAAQvW,GACb,MACJ,KAAKkS,GAAWK,IAChB,KAAKL,GAAWQ,WACZ7R,KAAK2V,MAAMxW,GACX,MACJ,KAAKkS,GAAW6B,WACZlT,KAAK4V,eACL,MACJ,KAAKvE,GAAW8B,cACZnT,KAAKoT,UACL,MAAM3N,EAAM,IAAIzC,MAAM7D,EAAOxD,KAAKb,SAElC2K,EAAI9J,KAAOwD,EAAOxD,KAAKA,KACvBqE,KAAKe,aAAa,gBAAiB0E,GACnC,OASZiQ,QAAQvW,GACJ,MAAM0B,EAAO1B,EAAOxD,MAAQ,GACxB,MAAQwD,EAAOnG,IACf6H,EAAKrB,KAAKQ,KAAK8U,IAAI3V,EAAOnG,KAE1BgH,KAAKgU,UACLhU,KAAK6V,UAAUhV,GAGfb,KAAKiU,cAAczU,KAAKnE,OAAOoY,OAAO5S,IAG9CgV,UAAUhV,GACN,GAAIb,KAAK8V,eAAiB9V,KAAK8V,cAAczY,OAAQ,CACjD,MAAM2D,EAAYhB,KAAK8V,cAAchV,QACrC,IAAK,MAAMiV,KAAY/U,EACnB+U,EAAS3V,MAAMJ,KAAMa,GAG7BwC,MAAMzC,KAAKR,MAAMJ,KAAMa,GAO3BiU,IAAI9b,GACA,MAAMmI,EAAOnB,KACb,IAAIgW,GAAO,EACX,OAAO,YAAanV,GAEZmV,IAEJA,GAAO,EACP7U,EAAKhC,OAAO,CACRtE,KAAMwW,GAAWK,IACjB1Y,GAAIA,EACJ2C,KAAMkF,MAUlB8U,MAAMxW,GACF,MAAM2V,EAAM9U,KAAKoU,KAAKjV,EAAOnG,IACzB,oBAAsB8b,IACtBA,EAAI1U,MAAMJ,KAAMb,EAAOxD,aAChBqE,KAAKoU,KAAKjV,EAAOnG,KAUhCyc,UAAUzc,GACNgH,KAAKhH,GAAKA,EACVgH,KAAKgU,WAAY,EACjBhU,KAAKiW,eACLjW,KAAKe,aAAa,WAOtBkV,eACIjW,KAAKiU,cAAcxY,SAASoF,GAASb,KAAK6V,UAAUhV,KACpDb,KAAKiU,cAAgB,GACrBjU,KAAKkU,WAAWzY,SAAS0D,IACrBa,KAAKqV,wBAAwBlW,GAC7Ba,KAAKb,OAAOA,MAEhBa,KAAKkU,WAAa,GAOtB0B,eACI5V,KAAKoT,UACLpT,KAAKmL,QAAQ,wBASjBiI,UACQpT,KAAK0U,OAEL1U,KAAK0U,KAAKjZ,SAASya,GAAeA,MAClClW,KAAK0U,UAAOnM,GAEhBvI,KAAK+T,GAAG,YAAY/T,MAQxB4T,aAUI,OATI5T,KAAKgU,WACLhU,KAAKb,OAAO,CAAEtE,KAAMwW,GAAW6B,aAGnClT,KAAKoT,UACDpT,KAAKgU,WAELhU,KAAKmL,QAAQ,wBAEVnL,KAQX8D,QACI,OAAO9D,KAAK4T,aAShBlI,SAASA,GAEL,OADA1L,KAAKqU,MAAM3I,SAAWA,EACf1L,KASPoV,eAEA,OADApV,KAAKqU,MAAMe,UAAW,EACfpV,KAiBX8I,QAAQA,GAEJ,OADA9I,KAAKqU,MAAMvL,QAAUA,EACd9I,KASXmW,MAAMJ,GAGF,OAFA/V,KAAK8V,cAAgB9V,KAAK8V,eAAiB,GAC3C9V,KAAK8V,cAActW,KAAKuW,GACjB/V,KASXoW,WAAWL,GAGP,OAFA/V,KAAK8V,cAAgB9V,KAAK8V,eAAiB,GAC3C9V,KAAK8V,cAAc5D,QAAQ6D,GACpB/V,KAQXqW,OAAON,GACH,IAAK/V,KAAK8V,cACN,OAAO9V,KAEX,GAAI+V,EAAU,CACV,MAAM/U,EAAYhB,KAAK8V,cACvB,IAAK,IAAI1Y,EAAI,EAAGA,EAAI4D,EAAU3D,OAAQD,IAClC,GAAI2Y,IAAa/U,EAAU5D,GAEvB,OADA4D,EAAUL,OAAOvD,EAAG,GACb4C,UAKfA,KAAK8V,cAAgB,GAEzB,OAAO9V,KAQXsW,eACI,OAAOtW,KAAK8V,eAAiB,GAkBjCS,cAAcR,GAGV,OAFA/V,KAAKwW,sBAAwBxW,KAAKwW,uBAAyB,GAC3DxW,KAAKwW,sBAAsBhX,KAAKuW,GACzB/V,KAkBXyW,mBAAmBV,GAGf,OAFA/V,KAAKwW,sBAAwBxW,KAAKwW,uBAAyB,GAC3DxW,KAAKwW,sBAAsBtE,QAAQ6D,GAC5B/V,KAsBX0W,eAAeX,GACX,IAAK/V,KAAKwW,sBACN,OAAOxW,KAEX,GAAI+V,EAAU,CACV,MAAM/U,EAAYhB,KAAKwW,sBACvB,IAAK,IAAIpZ,EAAI,EAAGA,EAAI4D,EAAU3D,OAAQD,IAClC,GAAI2Y,IAAa/U,EAAU5D,GAEvB,OADA4D,EAAUL,OAAOvD,EAAG,GACb4C,UAKfA,KAAKwW,sBAAwB,GAEjC,OAAOxW,KAQX2W,uBACI,OAAO3W,KAAKwW,uBAAyB,GASzCnB,wBAAwBlW,GACpB,GAAIa,KAAKwW,uBAAyBxW,KAAKwW,sBAAsBnZ,OAAQ,CACjE,MAAM2D,EAAYhB,KAAKwW,sBAAsB1V,QAC7C,IAAK,MAAMiV,KAAY/U,EACnB+U,EAAS3V,MAAMJ,KAAMb,EAAOxD,QCjkBrC,SAASib,GAAQ3U,GACpBA,EAAOA,GAAQ,GACfjC,KAAK6W,GAAK5U,EAAK6U,KAAO,IACtB9W,KAAK+W,IAAM9U,EAAK8U,KAAO,IACvB/W,KAAKgX,OAAS/U,EAAK+U,QAAU,EAC7BhX,KAAKiX,OAAShV,EAAKgV,OAAS,GAAKhV,EAAKgV,QAAU,EAAIhV,EAAKgV,OAAS,EAClEjX,KAAKkX,SAAW,EAQpBN,GAAQ9a,UAAUqb,SAAW,WACzB,IAAIN,EAAK7W,KAAK6W,GAAKpU,KAAK2U,IAAIpX,KAAKgX,OAAQhX,KAAKkX,YAC9C,GAAIlX,KAAKiX,OAAQ,CACb,IAAII,EAAO5U,KAAK6U,SACZC,EAAY9U,KAAKoC,MAAMwS,EAAOrX,KAAKiX,OAASJ,GAChDA,EAAoC,IAAN,EAAxBpU,KAAKoC,MAAa,GAAPwS,IAAuBR,EAAKU,EAAYV,EAAKU,EAElE,OAAgC,EAAzB9U,KAAKqU,IAAID,EAAI7W,KAAK+W,MAO7BH,GAAQ9a,UAAU0b,MAAQ,WACtBxX,KAAKkX,SAAW,GAOpBN,GAAQ9a,UAAU2b,OAAS,SAAUX,GACjC9W,KAAK6W,GAAKC,GAOdF,GAAQ9a,UAAU4b,OAAS,SAAUX,GACjC/W,KAAK+W,IAAMA,GAOfH,GAAQ9a,UAAU6b,UAAY,SAAUV,GACpCjX,KAAKiX,OAASA,GC1DX,MAAMW,WAAgBlY,GACzBuD,YAAYmE,EAAKnF,GACb,IAAI4V,EACJxU,QACArD,KAAK8X,KAAO,GACZ9X,KAAK0U,KAAO,GACRtN,GAAO,kBAAoBA,IAC3BnF,EAAOmF,EACPA,OAAMmB,GAEVtG,EAAOA,GAAQ,GACfA,EAAK6F,KAAO7F,EAAK6F,MAAQ,aACzB9H,KAAKiC,KAAOA,EACZD,GAAsBhC,KAAMiC,GAC5BjC,KAAK+X,cAAmC,IAAtB9V,EAAK8V,cACvB/X,KAAKgY,qBAAqB/V,EAAK+V,sBAAwBC,EAAAA,GACvDjY,KAAKkY,kBAAkBjW,EAAKiW,mBAAqB,KACjDlY,KAAKmY,qBAAqBlW,EAAKkW,sBAAwB,KACvDnY,KAAKoY,oBAAwD,QAAnCP,EAAK5V,EAAKmW,2BAAwC,IAAPP,EAAgBA,EAAK,IAC1F7X,KAAKqY,QAAU,IAAIzB,GAAQ,CACvBE,IAAK9W,KAAKkY,oBACVnB,IAAK/W,KAAKmY,uBACVlB,OAAQjX,KAAKoY,wBAEjBpY,KAAK8I,QAAQ,MAAQ7G,EAAK6G,QAAU,IAAQ7G,EAAK6G,SACjD9I,KAAK6U,YAAc,SACnB7U,KAAKoH,IAAMA,EACX,MAAMkR,EAAUrW,EAAKsW,QAAU,EAC/BvY,KAAKwY,QAAU,IAAIF,EAAQhH,QAC3BtR,KAAKyY,QAAU,IAAIH,EAAQnG,QAC3BnS,KAAKuU,cAAoC,IAArBtS,EAAKyW,YACrB1Y,KAAKuU,cACLvU,KAAK4D,OAEbmU,aAAaY,GACT,OAAKtY,UAAUhD,QAEf2C,KAAK4Y,gBAAkBD,EAChB3Y,MAFIA,KAAK4Y,cAIpBZ,qBAAqBW,GACjB,YAAUpQ,IAANoQ,EACO3Y,KAAK6Y,uBAChB7Y,KAAK6Y,sBAAwBF,EACtB3Y,MAEXkY,kBAAkBS,GACd,IAAId,EACJ,YAAUtP,IAANoQ,EACO3Y,KAAK8Y,oBAChB9Y,KAAK8Y,mBAAqBH,EACF,QAAvBd,EAAK7X,KAAKqY,eAA4B,IAAPR,GAAyBA,EAAGJ,OAAOkB,GAC5D3Y,MAEXoY,oBAAoBO,GAChB,IAAId,EACJ,YAAUtP,IAANoQ,EACO3Y,KAAK+Y,sBAChB/Y,KAAK+Y,qBAAuBJ,EACJ,QAAvBd,EAAK7X,KAAKqY,eAA4B,IAAPR,GAAyBA,EAAGF,UAAUgB,GAC/D3Y,MAEXmY,qBAAqBQ,GACjB,IAAId,EACJ,YAAUtP,IAANoQ,EACO3Y,KAAKgZ,uBAChBhZ,KAAKgZ,sBAAwBL,EACL,QAAvBd,EAAK7X,KAAKqY,eAA4B,IAAPR,GAAyBA,EAAGH,OAAOiB,GAC5D3Y,MAEX8I,QAAQ6P,GACJ,OAAKtY,UAAUhD,QAEf2C,KAAKiZ,SAAWN,EACT3Y,MAFIA,KAAKiZ,SAUpBC,wBAESlZ,KAAKmZ,eACNnZ,KAAK4Y,eACqB,IAA1B5Y,KAAKqY,QAAQnB,UAEblX,KAAKoZ,YAUbxV,KAAK7D,GACD,IAAKC,KAAK6U,YAAYhN,QAAQ,QAC1B,OAAO7H,KACXA,KAAKkV,OAAS,IAAI,GAAOlV,KAAKoH,IAAKpH,KAAKiC,MACxC,MAAMyB,EAAS1D,KAAKkV,OACd/T,EAAOnB,KACbA,KAAK6U,YAAc,UACnB7U,KAAKqZ,eAAgB,EAErB,MAAMC,EAAiB1Z,GAAG8D,EAAQ,QAAQ,WACtCvC,EAAK4J,SACLhL,GAAMA,OAGJwZ,EAAW3Z,GAAG8D,EAAQ,SAAU+B,IAClCtE,EAAKmI,UACLnI,EAAK0T,YAAc,SACnB7U,KAAKe,aAAa,QAAS0E,GACvB1F,EACAA,EAAG0F,GAIHtE,EAAK+X,0BAGb,IAAI,IAAUlZ,KAAKiZ,SAAU,CACzB,MAAMnQ,EAAU9I,KAAKiZ,SACL,IAAZnQ,GACAwQ,IAGJ,MAAMhE,EAAQtV,KAAKmC,cAAa,KAC5BmX,IACA5V,EAAOI,QAEPJ,EAAO9C,KAAK,QAAS,IAAIoC,MAAM,cAChC8F,GACC9I,KAAKiC,KAAK+I,WACVsK,EAAMpK,QAEVlL,KAAK0U,KAAKlV,MAAK,WACXuC,aAAauT,MAKrB,OAFAtV,KAAK0U,KAAKlV,KAAK8Z,GACftZ,KAAK0U,KAAKlV,KAAK+Z,GACRvZ,KAQX0T,QAAQ3T,GACJ,OAAOC,KAAK4D,KAAK7D,GAOrBgL,SAEI/K,KAAKsJ,UAELtJ,KAAK6U,YAAc,OACnB7U,KAAKe,aAAa,QAElB,MAAM2C,EAAS1D,KAAKkV,OACpBlV,KAAK0U,KAAKlV,KAAKI,GAAG8D,EAAQ,OAAQ1D,KAAKwZ,OAAOpX,KAAKpC,OAAQJ,GAAG8D,EAAQ,OAAQ1D,KAAKyZ,OAAOrX,KAAKpC,OAAQJ,GAAG8D,EAAQ,QAAS1D,KAAKuL,QAAQnJ,KAAKpC,OAAQJ,GAAG8D,EAAQ,QAAS1D,KAAKmL,QAAQ/I,KAAKpC,OAAQJ,GAAGI,KAAKyY,QAAS,UAAWzY,KAAK0Z,UAAUtX,KAAKpC,QAOvPwZ,SACIxZ,KAAKe,aAAa,QAOtB0Y,OAAO9d,GACHqE,KAAKyY,QAAQpG,IAAI1W,GAOrB+d,UAAUva,GACNa,KAAKe,aAAa,SAAU5B,GAOhCoM,QAAQ9F,GACJzF,KAAKe,aAAa,QAAS0E,GAQ/B/B,OAAOqO,EAAK9P,GACR,IAAIyB,EAAS1D,KAAK8X,KAAK/F,GAKvB,OAJKrO,IACDA,EAAS,IAAI,GAAO1D,KAAM+R,EAAK9P,GAC/BjC,KAAK8X,KAAK/F,GAAOrO,GAEdA,EAQXiW,SAASjW,GACL,MAAMoU,EAAOzc,OAAOG,KAAKwE,KAAK8X,MAC9B,IAAK,MAAM/F,KAAO+F,EAAM,CACpB,MAAMpU,EAAS1D,KAAK8X,KAAK/F,GACzB,GAAIrO,EAAOkR,OACP,OAGR5U,KAAK4Z,SAQTrE,QAAQpW,GACJ,MAAMH,EAAiBgB,KAAKwY,QAAQhH,OAAOrS,GAC3C,IAAK,IAAI/B,EAAI,EAAGA,EAAI4B,EAAe3B,OAAQD,IACvC4C,KAAKkV,OAAOhR,MAAMlF,EAAe5B,GAAI+B,EAAOsM,SAQpDnC,UACItJ,KAAK0U,KAAKjZ,SAASya,GAAeA,MAClClW,KAAK0U,KAAKrX,OAAS,EACnB2C,KAAKyY,QAAQrF,UAOjBwG,SACI5Z,KAAKqZ,eAAgB,EACrBrZ,KAAKmZ,eAAgB,EACrBnZ,KAAKmL,QAAQ,gBACTnL,KAAKkV,QACLlV,KAAKkV,OAAOpR,QAOpB8P,aACI,OAAO5T,KAAK4Z,SAOhBzO,QAAQjI,EAAQC,GACZnD,KAAKsJ,UACLtJ,KAAKqY,QAAQb,QACbxX,KAAK6U,YAAc,SACnB7U,KAAKe,aAAa,QAASmC,EAAQC,GAC/BnD,KAAK4Y,gBAAkB5Y,KAAKqZ,eAC5BrZ,KAAKoZ,YAQbA,YACI,GAAIpZ,KAAKmZ,eAAiBnZ,KAAKqZ,cAC3B,OAAOrZ,KACX,MAAMmB,EAAOnB,KACb,GAAIA,KAAKqY,QAAQnB,UAAYlX,KAAK6Y,sBAC9B7Y,KAAKqY,QAAQb,QACbxX,KAAKe,aAAa,oBAClBf,KAAKmZ,eAAgB,MAEpB,CACD,MAAMU,EAAQ7Z,KAAKqY,QAAQlB,WAC3BnX,KAAKmZ,eAAgB,EACrB,MAAM7D,EAAQtV,KAAKmC,cAAa,KACxBhB,EAAKkY,gBAETrZ,KAAKe,aAAa,oBAAqBI,EAAKkX,QAAQnB,UAEhD/V,EAAKkY,eAETlY,EAAKyC,MAAM6B,IACHA,GACAtE,EAAKgY,eAAgB,EACrBhY,EAAKiY,YACLpZ,KAAKe,aAAa,kBAAmB0E,IAGrCtE,EAAK2Y,oBAGdD,GACC7Z,KAAKiC,KAAK+I,WACVsK,EAAMpK,QAEVlL,KAAK0U,KAAKlV,MAAK,WACXuC,aAAauT,OASzBwE,cACI,MAAMC,EAAU/Z,KAAKqY,QAAQnB,SAC7BlX,KAAKmZ,eAAgB,EACrBnZ,KAAKqY,QAAQb,QACbxX,KAAKe,aAAa,YAAagZ,ICrVvC,MAAMC,GAAQ,GACd,SAAS,GAAO5S,EAAKnF,GACE,kBAARmF,IACPnF,EAAOmF,EACPA,OAAMmB,GAEVtG,EAAOA,GAAQ,GACf,MAAMgY,EAAShK,GAAI7I,EAAKnF,EAAK6F,MAAQ,cAC/ByE,EAAS0N,EAAO1N,OAChBvT,EAAKihB,EAAOjhB,GACZ8O,EAAOmS,EAAOnS,KACd0N,EAAgBwE,GAAMhhB,IAAO8O,KAAQkS,GAAMhhB,GAAI,QAC/CkhB,EAAgBjY,EAAKkY,UACvBlY,EAAK,0BACL,IAAUA,EAAKmY,WACf5E,EACJ,IAAIzB,EAaJ,OAZImG,EACAnG,EAAK,IAAI6D,GAAQrL,EAAQtK,IAGpB+X,GAAMhhB,KACPghB,GAAMhhB,GAAM,IAAI4e,GAAQrL,EAAQtK,IAEpC8R,EAAKiG,GAAMhhB,IAEXihB,EAAOzW,QAAUvB,EAAKuB,QACtBvB,EAAKuB,MAAQyW,EAAOrN,UAEjBmH,EAAGrQ,OAAOuW,EAAOnS,KAAM7F,GAIlC5G,OAAO2M,OAAO,GAAQ,CAClB4P,QAAO,GACPzK,OAAM,GACN4G,GAAI,GACJL,QAAS,K,wIC1CY3a,MAAM,wB,IACtBA,MAAM,mB,IACTE,EAAAA,EAAAA,GAEM,OAFDF,MAAM,kBAAgB,EACzBE,EAAAA,EAAAA,GAAoD,OAA/CC,IAAAC,OADP,G,IAGKJ,MAAM,kB,IACNA,MAAM,gB,IACNA,MAAM,gB,IAAqBA,MAAM,Q,UAI/BA,MAAM,4B,IACVA,MAAM,mB,IACTE,EAAAA,EAAAA,GAEM,OAFDF,MAAM,kBAAgB,EACzBE,EAAAA,EAAAA,GAAuD,OAAlDC,IAAAmhB,OADP,G,IAGKthB,MAAM,kB,IACNA,MAAM,gB,IACNA,MAAM,gB,IAAqBA,MAAM,Q,IAAiCA,MAAM,Q,+BAlBnE,OAAJuhB,EAAAA,OAAI,WAAd5gB,EAAAA,EAAAA,IAUK,KAVL,GAUK,EATHT,EAAAA,EAAAA,GAQM,MARN,GAQM,CAPJshB,IAGAthB,EAAAA,EAAAA,GAGM,MAHN,GAGM,EAFJA,EAAAA,EAAAA,GAAuC,IAAvC,IAAuCY,EAAAA,EAAAA,IAAbygB,EAAAA,SAAO,IACjCrhB,EAAAA,EAAAA,GAAgF,IAAhF,GAAgF,EAAxDA,EAAAA,EAAAA,GAAoD,OAApD,IAAoDY,EAAAA,EAAAA,IAA/BygB,EAAAA,WAAW,KAACzgB,EAAAA,EAAAA,IAAEygB,EAAAA,UAAQ,cAPzE,WAWA5gB,EAAAA,EAAAA,IAUK,KAVL,GAUK,EATHT,EAAAA,EAAAA,GAQM,MARN,GAQM,CAPJuhB,IAGAvhB,EAAAA,EAAAA,GAGM,MAHN,GAGM,EAFJA,EAAAA,EAAAA,GAAuC,IAAvC,IAAuCY,EAAAA,EAAAA,IAAbygB,EAAAA,SAAO,IACjCrhB,EAAAA,EAAAA,GAAyG,IAAzG,GAAyG,EAAjFA,EAAAA,EAAAA,GAAuC,OAAvC,IAAuCY,EAAAA,EAAAA,IAAlBygB,EAAAA,WAAS,IAASrhB,EAAAA,EAAAA,GAAsC,OAAtC,IAAsCY,EAAAA,EAAAA,IAAjBygB,EAAAA,UAAQ,YASpG,QACEzT,KAAM,YACN4T,MAAM,CACJ5f,KAAM+D,OACN9D,QAAS8D,OACT8b,UAAW9b,OACX7D,SAAU6D,QACV+b,MAAMF,IAENG,EAAAA,EAAAA,KAAU,KACR1R,SAAS2R,cAAc,gBAAgBC,UAAY5R,SAAS2R,cAAc,gBAAgBE,gBAE5FC,QAAQC,IAAI,UAAUR,EAAM3f,QAAQ,IAAI2f,EAAMC,UAAU,IAAID,EAAM1f,SAAS,IAAI0f,EAAM5f,Q,YCnCzF,MAAMqgB,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,iBCHO,MA6DMC,GAAwB,CAACC,EAAWC,KAC/C,IAAIC,EAAI,IAAItW,KAIZ,OAFkB,OAAdoW,GAAoC,KAAdA,IACxBE,EAAI,IAAItW,KAAKoW,IACRG,GAAiBD,EAAGD,IAOvBG,GAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAE/BD,GAAmB,CAACD,EAAGD,KAClC,MAAMI,EAAOH,EAAEI,cACTC,GAAM,KAAOL,EAAEM,WAAa,IAAI9a,OAAO,GACvC+a,GAAM,IAAMP,EAAEQ,WAAWhb,OAAO,GAChCib,EAAKP,GAAKF,EAAEU,UACZC,EAAKX,EAAEY,WACPpF,GAAO,IAAMwE,EAAEa,cAAcrb,OAAO,GAE1C,IACIsb,EADAC,EAAIJ,EAAIK,EAAO,KA0CnB,OAxCIL,EAAK,IACPI,EAAIJ,EAAK,GACTK,EAAO,MACS,KAAPL,GACTI,EAAI,GACJC,EAAO,MACS,IAAPL,IACTI,EAAI,IAEQ,SAAXhB,EACDe,EAAOX,EACa,eAAXJ,EACTe,EAAOX,EAAO,IAAME,EAAK,IAAME,EACb,eAAXR,EACPe,EAAOX,EAAO,IAAME,EAAK,IAAME,EACb,aAAXR,EACPe,EAAOX,EAAO,GAAKE,EAAUE,EACX,kBAAXR,EACPe,EAAQ,GAAEX,KAAQE,KAAME,MAAOE,KACb,kBAAXV,EACPe,EAAQ,GAAEX,KAAQE,KAAME,MAAOE,KACb,qBAAXV,EACPe,EAAOX,EAAO,IAAME,EAAK,IAAME,EAAK,IAAMI,EAAK,IAAMnF,EACnC,sBAAXuE,EACPe,EAAOX,EAAO,IAAME,EAAK,IAAME,EAAK,KAAOI,EAAK,IAAMnF,EACpC,yBAAXuE,EACPe,EAAQ,GAAEX,KAAQE,KAAME,KAAME,OAAOE,KAAMnF,IACzB,UAAXuE,EACPe,EAAOH,EAAK,IAAMnF,EACA,SAAXuE,EACPe,EAAOH,EAAK,GAAKnF,EACC,aAAXuE,EACPe,EAAOC,EAAI,IAAMvF,EAAM,IAAMwF,EAAO,IAClB,cAAXjB,GACWiB,EAAN,OAATA,EAAsB,KACb,KACZF,EAAOE,EAAOD,EAAI,IAAMvF,GAExBsF,EAAOX,EAAO,IAAME,EAAK,IAAME,EAAK,KAAOQ,EAAI,IAAMvF,EAAM,IAAMwF,EAE5DF,GhCkET,QACEvV,KAAM,UACN0V,WAAW,CACTC,YAAWA,IAEb7B,QAEE,MAAM8B,GAAQC,EAAAA,GAAAA,MAEd,IAAIC,EAAY,GAGZjZ,EAASqQ,GAAG4I,EAAW,CAAE7Q,WAAY,CAAC,aAAchE,KAAK,oBACzD8U,EAAY7I,GAAG4I,EAAW,CAAE7Q,WAAY,CAAC,aAAchE,KAAK,sBAEhE,MAAM+U,GAAerjB,EAAAA,EAAAA,MACfsjB,GAAYtjB,EAAAA,EAAAA,MACZwa,GAAYxa,EAAAA,EAAAA,KAAI,GAChBujB,GAASvjB,EAAAA,EAAAA,IAAI,IAEbwjB,GAAexjB,EAAAA,EAAAA,OAErBohB,EAAAA,EAAAA,KAAU,KACRI,QAAQC,IAAI,gBACRgC,EAAMzZ,MAAM0Z,QAIdC,aAAaC,QAAQ,OAAQH,EAAMzZ,MAAM0Z,QACzCG,EAAS9X,MAAQ6J,KAAKlD,MAAM5G,mBAAoBgY,KAAKL,EAAMzZ,MAAM0Z,UACjEK,MALAC,MAAM,aACNpc,OAAO0C,YAQX,MAAMuZ,GAAW7jB,EAAAA,EAAAA,IAAI,IAEf+jB,EAAe,KACnBF,EAAS9X,MAAMkY,SAAS,GACxBJ,EAAS9X,MAAMzK,QAAQ,GACvBuiB,EAAS9X,MAAMmY,YAAY,GAC3BL,EAAS9X,MAAM0K,IAAI,GACnBoN,EAAS9X,MAAMoY,SAAS,GACxBN,EAAS9X,MAAMqY,UAAU,GACzBP,EAAS9X,MAAMsY,UAAU,WACzBR,EAAS9X,MAAMrL,WAAa,SACE,YAA3BmjB,EAAS9X,MAAMuY,UAChBT,EAAS9X,MAAMrL,WAAa,SAG9BwJ,EAAO9C,KAAK,0BAA2Byc,EAAS9X,OAChDqX,EAAUhc,KAAK,6BAA8Byc,EAAS9X,QAMlDwY,EAAe,KAMnBV,EAAS9X,MAAMkY,SAAW,aAC1BJ,EAAS9X,MAAMzK,QAAU,KAEzB4I,EAAO9C,KAAK,0BAA2Byc,EAAS9X,OAChDqX,EAAUhc,KAAK,6BAA8Byc,EAAS9X,QAGlDyY,EAAc,UACQzV,IAAvBsU,EAAatX,OAA8C,KAAvBsX,EAAatX,QACpD8X,EAAS9X,MAAMkY,SAAW,UAC1BJ,EAAS9X,MAAMzK,QAAU+hB,EAAatX,MAEtC7B,EAAO9C,KAAK,UAAWyc,EAAS9X,OAChCsX,EAAatX,MAAQ,KAGjB0Y,EAAiB,KACrBjD,QAAQC,IAAI,6BACZoC,EAAS9X,MAAMkY,SAAW,aAE1B/Z,EAAO9C,KAAK,mBAAoByc,EAAS9X,OACzCqX,EAAUhc,KAAK,mBAAoByc,EAAS9X,OAC5C7B,EAAOkQ,aACPgJ,EAAUhJ,cAMZlQ,EAAO9D,GAAG,2BAA4BjE,IACpCqf,QAAQC,IAAI,4CAA4Ctf,GACxD0hB,EAAS9X,MAAMoY,SAAWhiB,EAAKgiB,SAC/B3J,EAAUzO,OAAQ,EAClB2Y,OAIFxa,EAAO9D,GAAG,WAAYjE,IACpBqf,QAAQC,IAAI,eAAetf,GAC3B,IAAId,EAAO,GACPd,EAAU4B,EAAK5B,QAChB4B,EAAKmiB,UAAYT,EAAS9X,MAAMuY,UACjCjjB,EAAO,KACPd,EAAU,IAEZ,IAAIokB,EAAUhD,GAAsBxf,EAAKyiB,YAAa,aACtDrB,EAAOxX,MAAM/F,KAAK,CAAC3E,KAAMA,EAAMC,QAAQa,EAAKb,QAASf,QAASA,EAASgB,SAAUojB,OAGnFza,EAAO9D,GAAG,cAAejE,IACvBqf,QAAQC,IAAI,wBAAyBtf,GACrCyF,OAAO+b,aAAakB,WAAW,QAC/BrK,EAAUzO,OAAQ,EAClBc,SAASiY,QAAO,MAIlB5a,EAAO9D,GAAG,oBAAqBjE,IAC7Bqf,QAAQC,IAAI,iCAAkCtf,GAC9CuiB,OAMFtB,EAAUhd,GAAG,gCAAiCjE,IAC5Cqf,QAAQC,IAAI,uDAAwDtf,EAAK5B,SACzEsjB,EAAS9X,MAAMqY,UAAYjiB,EAAKiiB,aAGlChB,EAAUhd,GAAG,cAAc,KACzBob,QAAQC,IAAI,0CAGd2B,EAAUhd,GAAG,oBAAoB,KAC/Bob,QAAQC,IAAI,+CAGd2B,EAAUhd,GAAG,WAAYjE,IACvBqf,QAAQC,IAAI,wCAEa,YAArBtf,EAAK+hB,aACPtc,OAAOwC,KAAK,2BAA4B,aAQ5C,MAAM2a,EAAc,KAClBlB,EAAS9X,MAAMkY,SAAS,UACxBJ,EAAS9X,MAAMmY,YAAY,UAE3Bd,EAAUhc,KAAK,UAAWyc,EAAS9X,QAM/BiZ,EAAe,KACnB,IAAIC,GAAS,EACb,GAAIzK,EAAUzO,MAAO,CACdkZ,IACHA,GAAS,EACT/a,EAAO9C,KAAK,WAEd,IAAI8d,GAAkB,IAAI1Z,MAAQ2Z,UAElC9c,YAAW,KACT,IAAI+c,GAAe,IAAI5Z,MAAQ2Z,UAC3BE,EAAWD,EAAcF,EACzBG,GAAY,KAAOJ,IACrB/a,EAAO9C,KAAK,eACZ6d,GAAS,KAEV,OAKDK,EAAsB,KAC1BrC,EAAMsC,SAAU,SAAQC,GAAAA,KAAyB7B,aAAa8B,QAAQ,SACjEhV,MAAMiV,IAEc,MAAfA,EAAIlW,SACNgS,QAAQC,IAAI,QAAQiE,EAAIvjB,MAMxBoiB,QAEDoB,OAAMtZ,IACXmV,QAAQjM,MAAMlJ,OAKZqY,EAAoB,OAUpBjB,GAAQmC,EAAAA,GAAAA,MACRC,EAAsB,KAC1B5C,EAAMsC,SAAU,SAAQO,GAAAA,KAAyB,CAC/CC,MAAM,QACNC,OAAO,QACP1B,QAAQ,UACR/jB,QAAS,MACT0lB,OAAQ,GACRC,OAAQ,KAEPzV,MAAMiV,IACY,MAAfA,EAAIlW,SACNiU,EAAMC,OAAOyC,QAAUT,EAAIvjB,SAK5BwjB,OAAMtZ,IACPmV,QAAQjM,MAAMlJ,GACd2X,MAAM,uBAIV,MAAO,CACLX,aAAAA,EACAC,UAAAA,EACAO,SAAAA,EACAL,aAAAA,EACAD,OAAAA,EAEAgB,aAAAA,EACAC,YAAAA,EACAC,eAAAA,EACAM,YAAAA,EACAc,oBAAAA,EACAP,oBAAAA,EACAN,aAAAA,EACAN,kBAAAA,EAEAlK,UAAAA,KiCtbN,MAAM,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAAS4L,GAAQ,CAAC,YAAY,qBAEzF","sources":["webpack://frontend/./src/views/ChatMng.vue","webpack://frontend/./node_modules/engine.io-parser/build/esm/commons.js","webpack://frontend/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://frontend/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://frontend/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://frontend/./node_modules/engine.io-parser/build/esm/index.js","webpack://frontend/./node_modules/@socket.io/component-emitter/index.mjs","webpack://frontend/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://frontend/./node_modules/engine.io-client/build/esm/util.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transport.js","webpack://frontend/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://frontend/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://frontend/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://frontend/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://frontend/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://frontend/./node_modules/engine.io-client/build/esm/socket.js","webpack://frontend/./node_modules/engine.io-client/build/esm/index.js","webpack://frontend/./node_modules/socket.io-client/build/esm/url.js","webpack://frontend/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://frontend/./node_modules/socket.io-parser/build/esm/binary.js","webpack://frontend/./node_modules/socket.io-parser/build/esm/index.js","webpack://frontend/./node_modules/socket.io-client/build/esm/on.js","webpack://frontend/./node_modules/socket.io-client/build/esm/socket.js","webpack://frontend/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://frontend/./node_modules/socket.io-client/build/esm/manager.js","webpack://frontend/./node_modules/socket.io-client/build/esm/index.js","webpack://frontend/./src/components/ChatMessage.vue","webpack://frontend/./src/components/ChatMessage.vue?7c5f","webpack://frontend/./src/assets/js/common/util.js","webpack://frontend/./src/views/ChatMng.vue?c512"],"sourcesContent":["<template>\r\n  <div class=\"kb-cloud\" id=\"kb-cloud\">\r\n    <!-- cloud-container -->\r\n    <div class=\"cloud-container\" id=\"cloud-now\">\r\n      <div class=\"cloud-wrapper\">\r\n        <!-- cloud-header -->\r\n        <header class=\"cloud-header\">\r\n          <div class=\"header-column header-title\">\r\n            <h2 class=\"title\">클라우드</h2>\r\n            <div class=\"badge-now\">NOW</div>\r\n          </div>\r\n          <div class=\"header-column header-subtitle\">\r\n            <h3 class=\"title\">[KB ACE Academy] 자산관리 STEP Ⅳ</h3>\r\n            <p class=\"text\">외환 상품/서비스(2022.10.13. 11:00~11:50)</p>\r\n          </div>\r\n          <div class=\"header-column header-util\">\r\n            <div class=\"util-status\">\r\n              <span class=\"text\">02:14  학습중</span>\r\n            </div>\r\n            <div class=\"util-my\">\r\n              <span class=\"text\">{{userInfo.lrnerNm}}</span>\r\n              <div class=\"my-avatar\">\r\n                <img src=\"../assets/images/@tmp/@tmp_mypage_avatar.jpg\" alt=\"임시이미지\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <!-- cloud-body -->\r\n        <div class=\"cloud-body\">\r\n          <!-- cloud-player -->\r\n          <div class=\"cloud-player\">\r\n            <!-- player-main -->\r\n            <div class=\"player-main\">\r\n              <!-- main-viewport -->\r\n              <div class=\"main-viewport\">\r\n                <div class=\"viewport-header\">\r\n                  <div class=\"header-column header-views\">\r\n                    <i class=\"icon-eye\"></i>\r\n                    <span class=\"text\">1,638</span>\r\n                  </div>\r\n                  <div class=\"header-column header-actions\">\r\n                    <button class=\"btn-viewport\">\r\n                      <i class=\"icon-viewport\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div class=\"viewport-video\">\r\n                  <video src=\"\" poster=\"../assets/images/@tmp/@tmp_cloud_02.jpg\"></video>\r\n                </div>\r\n              </div>\r\n              <!-- main-actions -->\r\n              <div class=\"main-actions\">\r\n                <!-- menu-container -->\r\n                <div v-if=\"userInfo.accessType === 'admin'\" class=\"menu-buttons\">\r\n                  <ul class=\"menu-list\">\r\n                    <li class=\"menu-item dropdown is-active\">\r\n                      <button class=\"btn-menu is-active\">\r\n                        <i class=\"icon-menu-lecture\"></i>\r\n                        <span class=\"text\">강의</span>\r\n                      </button>\r\n<!--                      <div class=\"dropdown-target\">-->\r\n<!--                        <div class=\"dropdown-box\">-->\r\n<!--                          <article class=\"dropdown-option-group\">-->\r\n<!--                            <h4 class=\"option-group-title\">학습관리</h4>-->\r\n<!--                            <ul class=\"dropdown-option-list\">-->\r\n<!--                              <li class=\"dropdown-option-item\"><a href=\"\" class=\"dropdown-option-link\">학습시작</a></li>-->\r\n<!--                              <li class=\"dropdown-option-item\"><a href=\"\" class=\"dropdown-option-link\">학습종료</a></li>-->\r\n<!--                              <li class=\"dropdown-option-item\"><a href=\"\" class=\"dropdown-option-link\">휴식시작</a></li>-->\r\n<!--                              <li class=\"dropdown-option-item\"><a href=\"\" class=\"dropdown-option-link\">휴식종료</a></li>-->\r\n<!--                              <li class=\"dropdown-option-item\"><a href=\"\" class=\"dropdown-option-link\">학습종료 취소</a></li>-->\r\n<!--                              <li class=\"dropdown-option-item\"><a href=\"\" class=\"dropdown-option-link\">학습종료 확인</a></li>-->\r\n<!--                            </ul>-->\r\n<!--                          </article>-->\r\n<!--                        </div>-->\r\n<!--                      </div>-->\r\n                    </li>\r\n                    <li class=\"menu-item\">\r\n                      <button class=\"btn-menu\">\r\n                        <i class=\"icon-menu-display\"></i>\r\n                        <span class=\"text\">화면</span>\r\n                      </button>\r\n                    </li>\r\n                    <li class=\"menu-item\">\r\n                      <button class=\"btn-menu\">\r\n                        <i class=\"icon-menu-attendance\"></i>\r\n                        <span class=\"text\">출석</span>\r\n                      </button>\r\n                    </li>\r\n                    <li class=\"menu-item\">\r\n                      <button class=\"btn-menu\">\r\n                        <i class=\"icon-menu-quiz\"></i>\r\n                        <span class=\"text\">퀴즈・투표</span>\r\n                      </button>\r\n                    </li>\r\n                    <li class=\"menu-item\">\r\n                      <button class=\"btn-menu\">\r\n                        <i class=\"icon-menu-event\"></i>\r\n                        <span class=\"text\">이벤트・쿠폰</span>\r\n                      </button>\r\n                    </li>\r\n                    <li class=\"menu-item\">\r\n                      <button class=\"btn-menu\">\r\n                        <i class=\"icon-menu-qna\"></i>\r\n                        <span class=\"text\">Q&A・공지</span>\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                  <ul class=\"menu-list\">\r\n                    <li class=\"menu-item\">\r\n                      <button class=\"btn-menu\">\r\n                        <i class=\"icon-menu-faq\"></i>\r\n                        <span class=\"text\">FAQ</span>\r\n                      </button>\r\n                    </li>\r\n                    <li class=\"menu-item\">\r\n                      <button class=\"btn-menu\">\r\n                        <i class=\"icon-menu-learners\"></i>\r\n                        <span class=\"text\">학습인원</span>\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <!-- //menu-container -->\r\n\r\n                <div class=\"action-buttons\">\r\n                  <button class=\"btn-reconnect\"><i class=\"icon-reconnect\"></i><span class=\"text\">재접속</span></button>\r\n                  <button class=\"btn-exit\" @click=\"sendDisconnect\"><i class=\"icon-exit\"></i><span class=\"text\">종료</span></button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- //player-main -->\r\n            <!-- player-aside -->\r\n            <div class=\"player-aside\">\r\n              <div class=\"aside-chat-container\">\r\n                <div class=\"chat-screen\">\r\n                  <ul class=\"chat-screen-messages\" ref=\"chatScreenEl\">\r\n                    <!-- my -->\r\n                    <ChatMessage v-for=\"(item, idx) in msgArr\" :key=\"idx\" :type=\"item.type\" :message=\"item.message\" :lrner-name=\"item.lrnerNm\" :send-date=\"item.sendDate\"></ChatMessage>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"chat-write\">\r\n                  <div class=\"chat-write-options\">\r\n                    <div class=\"option-column\">\r\n                      <button class=\"btn-emoji\"><i class=\"icon-emoji\"></i></button>\r\n                      <button class=\"btn-file\"><i class=\"icon-file\"></i></button>\r\n                    </div>\r\n                    <div class=\"option-column\">\r\n                      <div class=\"option-menu dropdown is-active\">\r\n                        <button class=\"btn-menu\"><i class=\"icon-menu\"></i></button>\r\n<!--                        <div class=\"dropdown-target\">-->\r\n<!--                          <div class=\"dropdown-box\">-->\r\n<!--                            <ul class=\"dropdown-option-list\">-->\r\n<!--                              <li class=\"dropdown-option-item\"><a href=\"\" class=\"dropdown-option-link\">강사님께 질문하기</a></li>-->\r\n<!--                            </ul>-->\r\n<!--                          </div>-->\r\n<!--                        </div>-->\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"chat-write-forms\">\r\n                    <input type=\"text\" placeholder=\"메시지 입력\"\r\n                           v-model=\"inputMessage\"\r\n                           @keyup.enter=\"sendMessage\"\r\n                           @keyup=\"updateTyping\"\r\n                    />\r\n                    <button class=\"btn-write\" @click=\"sendMessage\"><span class=\"text\">전송</span></button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- //player-aside -->\r\n          </div>\r\n          <!-- //cloud-player -->\r\n        </div>\r\n        <!-- //cloud-body -->\r\n      </div>\r\n    </div>\r\n    <!-- //cloud-container -->\r\n  </div>\r\n\r\n</template>\r\n<style>\r\n@import \"../assets/css/page_common.css\";\r\n@import \"../assets/css/page_cloud.css\";\r\n</style>\r\n\r\n<script>\r\nimport {onMounted, ref} from \"vue\";\r\nimport io from 'socket.io-client'\r\nimport {useStore} from \"vuex\";\r\nimport {ACT_GET_USERS_DECRYPT, ACT_GET_USERS_ENCRYPT} from \"@/store/modules/user/users\";\r\nimport {useRoute} from \"vue-router\";\r\nimport ChatMessage from \"@/components/ChatMessage\";\r\nimport {timestampToDateFormat} from \"@/assets/js/common/util\";\r\n\r\nexport default {\r\n  name: \"ChatMng\",\r\n  components:{\r\n    ChatMessage,\r\n  },\r\n  setup(){\r\n\r\n    const store = useStore();\r\n\r\n    let socketDns = \"\";\r\n    // let socketDns = 'http://devlxp.kbstar.com'\r\n\r\n    let socket = io(socketDns, { transports: ['websocket'], path:'/websocket/chat' }); //채팅소켓\r\n    let domSocket = io(socketDns, { transports: ['websocket'], path:'/websocket/system' }); // 컨트롤소켓\r\n\r\n    const inputMessage = ref();\r\n    const btnAreaEl = ref();\r\n    const connected = ref(false);\r\n    const msgArr = ref([]);\r\n\r\n    const chatScreenEl = ref();\r\n\r\n    onMounted(() => {\r\n      console.log('mounted====>')\r\n      if(!route.query.params){\r\n        alert('서버 오류입니다.')\r\n        window.close();\r\n      }else{\r\n        localStorage.setItem('info', route.query.params)\r\n        userInfo.value = JSON.parse(decodeURIComponent((atob(route.query.params))));\r\n        initUserData();\r\n      }\r\n    })\r\n\r\n    const userInfo = ref({})\r\n\r\n    const initUserData = () => {\r\n      userInfo.value.sendType='';\r\n      userInfo.value.message='';\r\n      userInfo.value.messageType='';\r\n      userInfo.value.url='';\r\n      userInfo.value.socketId='';\r\n      userInfo.value.socketId2='';\r\n      userInfo.value.channelNo='channel1';\r\n      userInfo.value.accessType = 'normal'\r\n      if(userInfo.value.lrnerId === 'S017330'){\r\n        userInfo.value.accessType = 'admin';\r\n      }\r\n\r\n      socket.emit('chat_channel_connection', userInfo.value);\r\n      domSocket.emit('message_channel_connection', userInfo.value);\r\n    }\r\n\r\n    /**\r\n     * 클라이언트 이벤트\r\n     */\r\n    const sendUserName = () => {\r\n      // 퇴장클릭시 소켓 끊김으로 재연결\r\n      // if(socket.disconnected){\r\n      //   socket.connect();\r\n      //   domSocket.connect();\r\n      // }\r\n      userInfo.value.sendType = 'connection'\r\n      userInfo.value.message = '입장'\r\n\r\n      socket.emit('chat_channel_connection', userInfo.value);\r\n      domSocket.emit('message_channel_connection', userInfo.value);\r\n    }\r\n\r\n    const sendMessage = () => {\r\n      if(inputMessage.value === undefined || inputMessage.value === '') return;\r\n      userInfo.value.sendType = 'message';\r\n      userInfo.value.message = inputMessage.value;\r\n\r\n      socket.emit('message', userInfo.value);\r\n      inputMessage.value = '';\r\n    }\r\n\r\n    const sendDisconnect = () => {\r\n      console.log('sendDisconnect-----------');\r\n      userInfo.value.sendType = 'disconnect';\r\n\r\n      socket.emit('disconnectCustom', userInfo.value);\r\n      domSocket.emit('disconnectCustom', userInfo.value);\r\n      socket.disconnect();\r\n      domSocket.disconnect();\r\n    }\r\n\r\n    /**\r\n     * socket이벤트\r\n     */\r\n    socket.on('chat_channel_connection', (data) => {\r\n      console.log('socket chat_channel_connection-----------',data)\r\n      userInfo.value.socketId = data.socketId;\r\n      connected.value = true;\r\n      getRedisUsersList();\r\n\r\n    });\r\n\r\n    socket.on('message', (data) => {\r\n      console.log('messsage===>',data)\r\n      let type = '';\r\n      let lrnerNm = data.lrnerNm;\r\n      if(data.lrnerId === userInfo.value.lrnerId) {\r\n        type = 'my';\r\n        lrnerNm = '';\r\n      }\r\n      let curDate = timestampToDateFormat(data.connectDate, '(A) hh:mm')\r\n      msgArr.value.push({type: type, message:data.message, lrnerNm: lrnerNm, sendDate: curDate})\r\n    });\r\n\r\n    socket.on('disconnect', (data) => {\r\n      console.log('disconnect-----------', data)\r\n      window.localStorage.removeItem('info');\r\n      connected.value = false;\r\n      location.reload(true);\r\n      // window.close();\r\n    });\r\n\r\n    socket.on('disconnectCustom', (data) => {\r\n      console.log('disconnectCustom--------------', data)\r\n      getRedisUsersList();\r\n    });\r\n\r\n    /**\r\n     * domSocket)\r\n     */\r\n    domSocket.on('domSocket_channel_connection', (data) => {\r\n      console.log('domSocket message_channel_connection----------------', data.lrnerNm)\r\n      userInfo.value.socketId2 = data.socketId2;\r\n    });\r\n\r\n    domSocket.on('disconnect', () => {\r\n      console.log('domSocket disconnect---------------')\r\n    });\r\n\r\n    domSocket.on('disconnectCustom', () => {\r\n      console.log('domSocket disconnectCustom--------------')\r\n    });\r\n\r\n    domSocket.on('message', (data) => {\r\n      console.log('domSocket message-------------------');\r\n\r\n      if (data.messageType === 'youtube') {\r\n        window.open('https://www.youtube.com/', '_blank');\r\n      }\r\n\r\n    });\r\n\r\n    /**\r\n     * 기능 함수들\r\n     */\r\n    const youtubeFunc = () => {\r\n      userInfo.value.sendType='message';\r\n      userInfo.value.messageType='youtube'\r\n\r\n      domSocket.emit('message', userInfo.value);\r\n    }\r\n\r\n    /**\r\n     * 기타 이벤트함수들\r\n     */\r\n    const updateTyping = () => {\r\n      let typing = true;\r\n      if (connected.value) {\r\n        if (!typing) {\r\n          typing = true;\r\n          socket.emit('typing');\r\n        }\r\n        let lastTypingTime = (new Date()).getTime();\r\n\r\n        setTimeout(() => {\r\n          let typingTimer = (new Date()).getTime();\r\n          let timeDiff = typingTimer - lastTypingTime;\r\n          if (timeDiff >= 400 && typing) {\r\n            socket.emit('stop typing');\r\n            typing = false;\r\n          }\r\n        }, 400);\r\n      }\r\n    }\r\n\r\n    // 유저 정보 복호화 후 세팅\r\n    const getUsersDecryptFunc = () => {\r\n      store.dispatch(`users/${ACT_GET_USERS_DECRYPT}`, localStorage.getItem('info'))\r\n          .then((res) => {\r\n            // console.log('res====>',res)\r\n            if (res.status === 200) {\r\n              console.log('200=>',res.data);\r\n              // userInfo.value.lrnerNm = res.data.lrnerNm;\r\n              // userInfo.value.userSn = res.data.userSn;\r\n              // userInfo.value.lrnerId = res.data.lrnerId;\r\n              // userInfo.value.accTy = res.data.accTy;\r\n              // userInfo.value.channelNo = res.data.lrnerId; // 방장의 아이디가 채널아이디(임시)\r\n              sendUserName();\r\n            }\r\n          }).catch(e => {\r\n        console.error(e);\r\n      });\r\n    }\r\n\r\n    // 레디스에서 회원정보를 가져온다.\r\n    const getRedisUsersList = () => {\r\n      // store.dispatch(`users/${ACT_GET_REDIS_USERS_LIST}`, userInfo.value.channelNo)\r\n      //     .then((res) => {\r\n      //       console.log('getRedisUsersList====>',res)\r\n      //       // if (res.status === 200) {}\r\n      //     }).catch(e => {\r\n      //   console.error(e);\r\n      // });\r\n    }\r\n\r\n    const route = useRoute();\r\n    const getUsersEncryptFunc = () => {\r\n      store.dispatch(`users/${ACT_GET_USERS_ENCRYPT}`, {\r\n        accTy:'admin',\r\n        userSn:'65795',\r\n        lrnerId:'S017347',\r\n        lrnerNm: '김상민',\r\n        deptCd: '',\r\n        deptNm: '',\r\n        // 추가정보들 더 들어가야됨\r\n      }).then((res) => {\r\n        if (res.status === 200) {\r\n          route.params.encrypt = res.data;\r\n          // localStorage.setItem('info', route.params.encrypt);\r\n          // let rou = router.resolve({name: 'ChatMng'})\r\n          // location.href = rou.href\r\n        }\r\n      }).catch(e => {\r\n        console.error(e);\r\n        alert('창을 닫고 재접속 해주세요.')\r\n      });\r\n    }\r\n\r\n    return {\r\n      inputMessage,\r\n      btnAreaEl,\r\n      userInfo,\r\n      chatScreenEl,\r\n      msgArr,\r\n\r\n      sendUserName,\r\n      sendMessage,\r\n      sendDisconnect,\r\n      youtubeFunc,\r\n      getUsersEncryptFunc,\r\n      getUsersDecryptFunc,\r\n      updateTyping,\r\n      getRedisUsersList,\r\n\r\n      connected,\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n/* add css */\r\n.iframe-area, .connect-area{\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  /*display: none;*/\r\n}\r\n\r\n.wrap{\r\n  display: flex;\r\n  flex-direction: column;\r\n  /*flex-direction: row;*/\r\n  height: 100vh;\r\n  border: 2px solid lightgray;\r\n  border-radius: 5px;\r\n}\r\n\r\n.left-wrap{\r\n  width: 60%;\r\n}\r\n\r\n.right-wrap{\r\n  width:40%;\r\n}\r\n\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n  font-weight: 300;\r\n  -webkit-font-smoothing: antialiased;\r\n}\r\n\r\nhtml, input {\r\n  font-family:\r\n      \"HelveticaNeue-Light\",\r\n      \"Helvetica Neue Light\",\r\n      \"Helvetica Neue\",\r\n      Helvetica,\r\n      Arial,\r\n      \"Lucida Grande\",\r\n      sans-serif;\r\n}\r\n\r\nhtml, body {\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n  word-wrap: break-word;\r\n}\r\n\r\n/* Pages */\r\n\r\n.pages {\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100%;\r\n  position: relative;\r\n}\r\n\r\n.page {\r\n  height: 100%;\r\n  position: absolute;\r\n  width: 100%;\r\n}\r\n\r\n/* Chat page */\r\n\r\n.chat.page {\r\n  /*display: none;*/\r\n  flex-direction: column;\r\n}\r\n\r\n/* Font */\r\n\r\n.messages {\r\n  font-size: 100%;\r\n}\r\n\r\n.inputMessage {\r\n  font-size: 100%;\r\n}\r\n\r\n.log {\r\n  color: gray;\r\n  font-size: 70%;\r\n  margin: 5px;\r\n  text-align: center;\r\n}\r\n\r\n/* Messages */\r\n\r\n.chatArea {\r\n  height: 91%;\r\n}\r\n\r\n.messages {\r\n  height: 100%;\r\n  margin: 0;\r\n  overflow-y: scroll;\r\n  padding: 10px 20px 10px 20px;\r\n}\r\n\r\n.message.typing .messageBody {\r\n  color: gray;\r\n}\r\n\r\n.username {\r\n  font-weight: 700;\r\n  overflow: hidden;\r\n  padding-right: 15px;\r\n  text-align: right;\r\n}\r\n\r\n/* Input */\r\n\r\n.inputMessage {\r\n  border: 1px solid gray;\r\n  bottom: 0;\r\n  height: 60px;\r\n  left: 0;\r\n  outline: none;\r\n  padding-left: 10px;\r\n  margin-right: 5px;\r\n  right: 0;\r\n  width: 85%;\r\n}\r\n\r\n\r\n</style>","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","<template>\r\n  <li v-if=\"type==='my'\" class=\"sent-message message\">\r\n    <div class=\"message-content\">\r\n      <div class=\"message-avatar\">\r\n        <img src=\"../assets/images/@tmp/@tmp_profile.jpg\" />\r\n      </div>\r\n      <div class=\"message-bubble\">\r\n        <p class=\"message-text\">{{message}}</p>\r\n        <p class=\"message-meta\"><span class=\"meta\">{{lrnerName}} {{sendDate}}</span></p>\r\n      </div>\r\n    </div>\r\n  </li>\r\n  <li v-else class=\"incoming-message message\">\r\n    <div class=\"message-content\">\r\n      <div class=\"message-avatar\">\r\n        <img src=\"../assets/images/@tmp/@tmp_profile_02.jpg\" />\r\n      </div>\r\n      <div class=\"message-bubble\">\r\n        <p class=\"message-text\">{{message}}</p>\r\n        <p class=\"message-meta\"><span class=\"meta\">{{lrnerName}}</span><span class=\"meta\">{{sendDate}}</span></p>\r\n      </div>\r\n    </div>\r\n  </li>\r\n</template>\r\n\r\n<script>\r\nimport {onMounted} from \"vue\";\r\n\r\nexport default {\r\n  name: \"MyMessage\",\r\n  props:{\r\n    type: String,\r\n    message: String,\r\n    lrnerName: String,\r\n    sendDate: String,\r\n  },setup(props){\r\n\r\n    onMounted(() => {\r\n      document.querySelector('.chat-screen').scrollTop = document.querySelector('.chat-screen').scrollHeight;\r\n    });\r\n    console.log('props;;',props.message,',',props.lrnerName,',',props.sendDate,',',props.type)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./ChatMessage.vue?vue&type=template&id=0c335f85\"\nimport script from \"./ChatMessage.vue?vue&type=script&lang=js\"\nexport * from \"./ChatMessage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\user\\\\IdeaProjects\\\\chat-sample2\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {isChildMenu} from '@/assets/js/modules/menu/menu-common';\r\nimport { v3ImgPreviewFn } from 'v3-img-preview'\r\nimport router from \"@/router\";\r\n\r\nexport const lengthCheck = res => {\r\n  return !!(res && res.items && res.items.length > 0);\r\n};\r\n\r\nexport const collectionCheck = (items, key) => {\r\n  return !!(items && items.length > 0 && items[0][key] > 0);\r\n}\r\n\r\nexport const getItems = res => {\r\n  return res.items;\r\n};\r\n\r\nexport const getItem = res => {\r\n  return res.items[0];\r\n};\r\n\r\nexport const getCheckItems = res => {\r\n  if(lengthCheck(res)){\r\n    return res.items;\r\n  }\r\n  return [];\r\n}\r\n\r\nexport const isSuccess = res => {\r\n  return !!(res && res.result && res.result.number === 200);\r\n};\r\n\r\nexport const getResult = res => {\r\n  if(res && res.result){\r\n    return res.result;\r\n  }\r\n  return {\r\n    number: 500,\r\n    message: '오류가 발생했습니다. 잠시 후 다시 시도해주세요.'\r\n  };\r\n};\r\n\r\nexport const getPaging = res => {\r\n  if(res && res.paging){\r\n    return res.paging;\r\n  }\r\n  return {\r\n    hasMore: false,\r\n    totalCount: 0,\r\n    pageSize: 10,\r\n    pageNo: 1\r\n  }\r\n}\r\n\r\nexport const ymdStrToFormat = (ymdStr, format) => {\r\n  return ymdStr.substr(0, 4) + format + ymdStr.substr(4, 2) + format + ymdStr.substr(6, 2);\r\n}\r\n\r\nexport const hhmmStrToFormat = (hhmm, division) => {\r\n  return hhmm.substr(0, 2) + division + hhmm.substr(2, 2);\r\n}\r\n\r\nexport const ymdStrToDate = (ymd) => {\r\n  return new Date(Number(ymd.substr(0, 4)), Number(ymd.substr(4, 2))-1, Number(ymd.substr(6, 2)));\r\n}\r\n\r\nexport const timestampToDateFormat = (timestamp, format) => {\r\n  let d = new Date();\r\n\r\n  if (timestamp !== null && timestamp !== '')\r\n    d = new Date(timestamp);\r\n  return dateToDateFormat(d, format);\r\n}\r\n\r\nexport const ymdStrToDateFormat = (ymd, format) => {\r\n  return dateToDateFormat(ymdStrToDate(ymd), format);\r\n}\r\n\r\nconst week = ['일', '월', '화', '수', '목', '금', '토'];\r\n\r\nexport const dateToDateFormat = (d, format) => {\r\n  const yyyy = d.getFullYear(),\r\n        mm = ('0' + (d.getMonth() + 1)).slice(-2),\t// Months are zero based. Add leading 0.\r\n        dd = ('0' + d.getDate()).slice(-2),\t\t\t// Add leading 0.\r\n        w = (week[d.getDay()]),\r\n        hh = d.getHours(),\r\n        min = ('0' + d.getMinutes()).slice(-2);\t\t// Add leading 0.\r\n\r\n  let h = hh, ampm = 'AM';\r\n  let time;\r\n  if (hh > 12) {\r\n    h = hh - 12;\r\n    ampm = 'PM';\r\n  } else if (hh === 12) {\r\n    h = 12;\r\n    ampm = 'PM';\r\n  } else if (hh === 0) {\r\n    h = 12;\r\n  }\r\n  if(format === 'yyyy'){\r\n    time = yyyy;\r\n  } else if (format === 'yyyy-MM-dd') {\r\n    time = yyyy + '-' + mm + '-' + dd;\r\n  }else if(format === 'yyyy.MM.dd'){\r\n    time = yyyy + '.' + mm + '.' + dd;\r\n  }else if(format === 'yyyyMMdd'){\r\n    time = yyyy + '' + mm + '' + dd;\r\n  }else if(format === 'yyyy-MM-dd(w)'){\r\n    time = `${yyyy}-${mm}-${dd} (${w})`;\r\n  }else if(format === 'yyyy.MM.dd(w)'){\r\n    time = `${yyyy}.${mm}.${dd} (${w})`;\r\n  }else if(format === 'yyyy.MM.dd hh:mm'){\r\n    time = yyyy + '.' + mm + '.' + dd + ' ' + hh + ':' + min;\r\n  }else if(format === 'yyyy-MM-dd, hh:mm'){\r\n    time = yyyy + '-' + mm + '-' + dd + ', ' + hh + ':' + min;\r\n  }else if(format === 'yyyy-MM-dd(w), hh:mm'){\r\n    time = `${yyyy}-${mm}-${dd}(${w}), ${hh}:${min}`;\r\n  }else if(format === 'hh:mm'){\r\n    time = hh + ':' + min;\r\n  }else if(format === 'hhmm'){\r\n    time = hh + '' + min;\r\n  }else if(format === 'hh:mm(A)'){\r\n    time = h + ':' + min + '(' + ampm + ')';\r\n  }else if(format === '(A) hh:mm'){\r\n    if(ampm === 'AM') ampm = '오전';\r\n    else ampm = '오후';\r\n    time = ampm + h + ':' + min;\r\n  } else{\r\n    time = yyyy + '-' + mm + '-' + dd + ', ' + h + ':' + min + ' ' + ampm;\r\n  }\r\n  return time;\r\n}\r\n\r\nexport const getCalcDate = (dParam, calcNum, format) => {\r\n  let date = new Date();\r\n  let ymdDt = '';\r\n\r\n  // Year기준\r\n  if (dParam.toUpperCase() === 'Y') {\r\n    ymdDt = new Date(date.setFullYear(date.getFullYear() + calcNum));\r\n  }\r\n  // Month기준\r\n  else if (dParam.toUpperCase() === 'M') {\r\n    ymdDt = new Date(date.setMonth(date.getMonth() + calcNum));\r\n  }\r\n  // Day기준\r\n  else if (dParam.toUpperCase() === 'D') {\r\n    ymdDt = new Date(date.setDate(date.getDate() + calcNum));\r\n  }\r\n  return dateToDateFormat(ymdDt, format);\r\n}\r\n\r\nexport const getTodayDate = (format) => {\r\n  let date = new Date();\r\n  let year = date.getFullYear();\r\n  let month = '' + (date.getMonth()+1);\r\n  let day = '' + date.getDate();\r\n\r\n  if(month.length < 2){\r\n    month = '0' + month;\r\n  }\r\n\r\n  if(day.length < 2){\r\n    day = '0' + day;\r\n  }\r\n\r\n  let today = '';\r\n\r\n  if(format === 'yyyy'){\r\n    today = year.toString();\r\n  } else if(format === 'yyyy.mm.dd'){\r\n    today = year.toString() + '.' + month + '.' + day;\r\n  }else if(format === 'yyyy-mm-dd'){\r\n    today = year.toString() + '-' + month + '-' + day;\r\n  }else{\r\n      today = year.toString() + month + day;\r\n  }\r\n\r\n\r\n  return today;\r\n}\r\n\r\n// export const queryToValue = (query, isNum, defaultVal) => {\r\n//   if(query){\r\n//     return isNum ? parseInt(query) : query;\r\n//   }else{\r\n//     if(defaultVal !== null && defaultVal !== undefined){\r\n//       return defaultVal;\r\n//     }else{\r\n//       return isNum ? 1 : '';\r\n//     }\r\n//   }\r\n// }\r\n\r\n// export const itemsToOptions = (items, {nameKey, valueKey}) => {\r\n//   return items.map(item => ({\r\n//     name: item[nameKey],\r\n//     value: item[valueKey]\r\n//   }));\r\n// }\r\n\r\nexport const phoneNumberMask = ( phoneNumber ) => {\r\n  if (!phoneNumber) return phoneNumber\r\n  phoneNumber = phoneNumber.replace(/[^0-9]/g, '')\r\n  let res = ''\r\n  if (phoneNumber.length < 3) {\r\n    res = phoneNumber\r\n  } else {\r\n    if (phoneNumber.substr(0, 2) === '02') {\r\n      if (phoneNumber.length <= 5) {//02-123-5678\r\n        res = phoneNumber.substr(0, 2) + '-' + phoneNumber.substr(2, 3)\r\n      } else if (phoneNumber.length > 5 && phoneNumber.length <= 9) {//02-123-5678\r\n        res = phoneNumber.substr(0, 2) + '-' + phoneNumber.substr(2, 3) + '-' + phoneNumber.substr(5)\r\n      } else if (phoneNumber.length > 9) {//02-1234-5678\r\n        res = phoneNumber.substr(0, 2) + '-' + phoneNumber.substr(2, 4) + '-' + phoneNumber.substr(6)\r\n      }\r\n    } else {\r\n      if (phoneNumber.length < 4) {\r\n        res = phoneNumber\r\n      } else if (phoneNumber.length < 7) {\r\n        res = phoneNumber.substr(0, 3) + '-' + phoneNumber.substr(3)\r\n      } else if (phoneNumber.length < 11) {\r\n        res = phoneNumber.substr(0, 3) + '-' + phoneNumber.substr(3, 3) + '-' + phoneNumber.substr(6)\r\n      } else {\r\n        res = phoneNumber.substr(0, 3) + '-' + phoneNumber.substr(3, 4) + '-' + phoneNumber.substr(7)\r\n      }\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\nconst units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\nexport const convertToStorageBytes = (x) => {\r\n  let n = parseInt(x, 10) || 0, l = 0;\r\n  while (n > 1024) {\r\n    n = n / 1024;\r\n    l++;\r\n  }\r\n  return (n.toFixed(n >= 10 ? 0 : 1) + ' ' + units[l]);\r\n}\r\n\r\nexport const paginate = (array, page_number, page_size) => {\r\n  // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\r\n  return array.slice((page_number - 1) * page_size, page_number * page_size);\r\n}\r\n\r\nexport const validate = (store, target, validateObj) => {\r\n  let result = true;\r\n  let msg = null;\r\n  for(let i = 0; i < validateObj.length; i++ ){\r\n    if(validateObj[i].type === 'number'){\r\n      if(target[validateObj[i].key] === null || target[validateObj[i].key] === undefined) {\r\n        msg = validateObj[i].msg;\r\n        result = false;\r\n        break;\r\n      }\r\n    }else{\r\n      if(!target[validateObj[i].key]){\r\n        msg = validateObj[i].msg;\r\n        result = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  if(!result){\r\n    alert(msg);\r\n    // store.commit(`common/${MUT_SHOW_ALERT}`, {\r\n    //   title: msg\r\n    // });\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n// 페이징 정보 등록\r\nexport const setPaging = (target, res) => {\r\n  const paging = getPaging(res);\r\n  Object.keys(paging).forEach(key => {\r\n    target[key] = paging[key];\r\n  });\r\n}\r\n\r\nexport const setParams = (params, item) => {\r\n  Object.keys(params).forEach(key => {\r\n    if(item[key] !== null && item[key] !== undefined){\r\n      params[key] = item[key];\r\n    }\r\n  });\r\n}\r\n\r\nexport const setParamsWithExclusive = (params, item, exclusives) => {\r\n  Object.keys(params).forEach(key => {\r\n    if(!exclusives.includes(key)){\r\n      if(item[key] !== null && item[key] !== undefined){\r\n        params[key] = item[key];\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const setParamsWithArray = (params, item, arrayValues) => {\r\n  Object.keys(params).forEach(key => {\r\n    if(arrayValues.includes(key)){\r\n      if(item[key]){\r\n        params[key] = item[key].split(',').map(x => parseInt(x));\r\n      }else{\r\n        params[key] = []\r\n      }\r\n    }else{\r\n      if(item[key] !== null && item[key] !== undefined){\r\n        params[key] = item[key];\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n\r\nexport const initParams = (params) => {\r\n  Object.keys(params).forEach(key => {\r\n    if(params[key] instanceof Number){\r\n      params[key] = 0;\r\n    }else if(params[key] instanceof Array){\r\n      params[key] = [];\r\n    }else if(key.indexOf(\"Yn\") > -1){\r\n      params[key] = '';\r\n    }else{\r\n      params[key] = null;\r\n    }\r\n  });\r\n}\r\n\r\nexport const initParamsWithExclusive = (params, exclusives) => {\r\n  Object.keys(params).forEach(key => {\r\n    if(!exclusives.includes(key)){\r\n      if(params[key] instanceof Number){\r\n        params[key] = 0;\r\n      }else if(params[key] instanceof Array){\r\n        params[key] = [];\r\n      }else if(key.indexOf(\"Yn\") > -1){\r\n        params[key] = '';\r\n      }else{\r\n        params[key] = null;\r\n      }\r\n    }\r\n  });\r\n}\r\n/*\r\n  입력된 Parameter를 Router에 Query String으로 추가하는 기능.\r\n\r\n  @사용처: 검색조건을 Query String에 담는다.\r\n  @파라미터:\r\n    router - 라우터\r\n    query - 라우터 query string 으로 추가할 오브젝트\r\n    param - query string에 추가될 값\r\n */\r\nexport const setQueryByParams = (router, query, param) => {\r\n  Object.entries(param).forEach(([key, value]) => {\r\n    if (value) query[key] = value;\r\n  });\r\n  router.push({query: query});\r\n}\r\n/*\r\n  Router에 Query String 이 존재하면 Parameter에 넣어주는 기능.\r\n\r\n  @사용처: Query String을 검색조건에 담는다.\r\n  @파라미터:\r\n    initialize - target 초기화 여부\r\n    router - 라우터\r\n    param - query string 값이 저장될 변수\r\n*/\r\nexport const setParamsByQuery = (route, target, initialize) => {\r\n  if (initialize) initParams(target);\r\n  if(route && route.query) {\r\n    Object.keys(target).forEach(key => {\r\n      if (route.query[key] !== null && route.query[key] !== undefined) target[key] = route.query[key];\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * URL로 직접 pageNo나 pageSize 입력시 반영되지 않는 오류 방지\r\n * 사용법 const paging = ref(initPaging(route));\r\n * @param route\r\n * @returns {{pageNo: number, pageSize: number, totalCount: number}}\r\n */\r\nexport const initPaging  = (route) => {\r\n  const paging = {pageNo: 1, pageSize: 10, totalCount: 0}\r\n  if(route.query && route.query.pageNo > 0){\r\n    paging.pageNo = route.query.pageNo\r\n  }\r\n\r\n  if(route.query && route.query.pageSize > 0){\r\n    paging.pageSize = route.query.pageSize\r\n  }\r\n  return paging;\r\n}\r\n\r\n// export const getRegisterTimeFormat = (timestamp, now) => {\r\n//   if(!now) now = new Date().getTime();\r\n//   const diff = now - timestamp;\r\n//   const sec = diff /1000;\r\n//   const min = sec / 60;\r\n//   const hour = min / 60;\r\n//   const day = hour / 24;\r\n//\r\n//   if(day > 30){\r\n//     return timestampToDateFormat(now, 'yyyy.MM.dd');\r\n//   }else if(hour > 24){\r\n//     const day = hour / 24;\r\n//     return `${day.toFixed(0)}일전`;\r\n//   }else if(hour < 1){\r\n//     return `${min.toFixed(0)}분전`;\r\n//   }else{\r\n//     return `${hour.toFixed(0)}시간전`;\r\n//   }\r\n// }\r\n\r\nexport const goToTop = (targetId, _duration, _adjust) => {\r\n  const targetEle = document.getElementById(targetId);\r\n  if (!targetEle) return;\r\n\r\n  // - Get current &amp; target positions\r\n  const scrollEle = document.documentElement || window.scrollingElement,\r\n      currentY = scrollEle.scrollTop,\r\n      targetY = targetEle.offsetTop - (_adjust || 0);\r\n  animateScrollTo(currentY, targetY, _duration);\r\n\r\n  // - Animate and scroll to target position\r\n  function animateScrollTo(_startY, _endY, _duration) {\r\n    _duration = _duration ? _duration : 600;\r\n    const unitY = (targetY - currentY) / _duration;\r\n    const startTime = new Date().getTime();\r\n    const endTime = new Date().getTime() + _duration;\r\n    const scrollTo = function() {\r\n      let now = new Date().getTime();\r\n      let passed = now - startTime;\r\n      if (now <= endTime) {\r\n        scrollEle.scrollTop = currentY + (unitY * passed);\r\n        requestAnimationFrame(scrollTo);\r\n      }\r\n    };\r\n    requestAnimationFrame(scrollTo);\r\n  }\r\n}\r\n\r\nexport const numberComma = (val) => {\r\n  return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n}\r\n\r\nexport const valueReplaceBlank = (val, str) => {\r\n  // return val.toString().replaceAll(',', '');\r\n  return val.toString().replaceAll(str, '');\r\n}\r\n\r\nexport const getCalendar = (year, month) => {\r\n  const getCalendarData = (year, month) => {\r\n    const currentMonth = parseInt(month);\r\n    const prevMonth = currentMonth === 1 ? 12 : currentMonth - 1;\r\n    const nextMonth = currentMonth === 12 ? 1 : currentMonth + 1;\r\n    const prevYear = prevMonth === 12 ? year - 1 : year;\r\n    const nextYear = nextMonth === 1 ? year + 1 : year;\r\n\r\n    const calendar = [[],[],[],[],[],[]];\r\n\r\n    const setDate = new Date(year, month - 1, 1);\r\n    //이번 달의 처음 요일을 구합니다.\r\n    const firstDayName = setDate.getDay();\r\n    const lastDay = new Date(targetDay.getFullYear(),targetDay.getMonth() + 1,0).getDate();\r\n    const prevLastDay = new Date(targetDay.getFullYear(),targetDay.getMonth(),0).getDate();\r\n    let startDayCount = 1;\r\n    let lastDayCount = 1;\r\n\r\n    //1~6주차를 위해 6번 반복합니다.\r\n    for (let i = 0; i < 6; i++) {\r\n      //일요일~토요일을 위해 7번 반복합니다.\r\n      for (let j = 0; j < 7; j++) {\r\n        // 이번달 이전...\r\n        if (i === 0 && j < firstDayName) {\r\n          calendar[i].push({\r\n            'year': prevYear,\r\n            'month': prevMonth,\r\n            'day': (prevLastDay - (firstDayName - 1) + j)\r\n          });\r\n        }\r\n        else if (i === 0 && j >= firstDayName) {\r\n          calendar[i].push({\r\n            'year': year,\r\n            'month': currentMonth,\r\n            'day': startDayCount\r\n          })\r\n          setFixDayCount(startDayCount++)\r\n        }\r\n        else if (i > 0 && startDayCount <= lastDay) {\r\n          //일요일일 때, 토요일일 때, 나머지 요일 일 때\r\n          calendar[i].push({\r\n            'year': year,\r\n            'month': currentMonth,\r\n            'day': startDayCount\r\n          });\r\n          setFixDayCount(startDayCount++)\r\n        }\r\n        // startDayCount > lastDay: 이번 달의 마지막 날 이후일 때\r\n        // 다음 달임...\r\n        else if (startDayCount > lastDay) {\r\n          // calendar[i].push(lastDayCount++)\r\n          calendar[i].push({\r\n            'year': nextYear,\r\n            'month': nextMonth,\r\n            'day': lastDayCount++\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return calendar;\r\n    //캘린더 div 태그에 내용 붙임\r\n  };\r\n\r\n  const setFixDayCount = number => {\r\n    //캘린더 하루마다 아이디를 만들어주기 위해 사용\r\n    let fixNum = \"\";\r\n    if (number < 10) {\r\n      fixNum = \"0\" + number;\r\n    } else {\r\n      fixNum = number;\r\n    }\r\n    return fixNum;\r\n  };\r\n\r\n  const targetDay = (year > 0 && month > 0) ? new Date(year, (month - 1), 1) : new Date();\r\n  if (targetDay.getMonth() + 1 < 10) {\r\n    return getCalendarData(targetDay.getFullYear(), \"0\" + (targetDay.getMonth() + 1));\r\n  } else {\r\n    return getCalendarData(targetDay.getFullYear(), \"\" + (targetDay.getMonth() + 1));\r\n  }\r\n}\r\n\r\nexport const getCurrentIdx = (routeStr, menuObj) => {\r\n  const path = routeStr;\r\n  const menus = menuObj;\r\n  for(let i=0; i < menus.value.length; i++){\r\n    if(menus.value[i].children && menus.value[i].children.length ){\r\n      for(let j=0; j < menus.value[i].children.length; j++){\r\n        if(menus.value[i].children[j].children && menus.value[i].children[j].children.length ){\r\n          for(let l=0; l < menus.value[i].children[j].children.length; l++){\r\n            if(isChildMenu(path, menus.value[i].children[j].children[l].menuUrl)){\r\n              menus.value[i].children[j].isActive = true;\r\n              // store.commit(`menu/${MUT_SET_MENU_IDX}`, i);\r\n              return i;\r\n            }\r\n          }\r\n        }else{\r\n          if(isChildMenu(path, menus.value[i].children[j].menuUrl)){\r\n            menus.value[i].children[j].isActive = true;\r\n            // store.commit(`menu/${MUT_SET_MENU_IDX}`, i);\r\n            return i;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n  selectbox year(년도) 옵션\r\n\r\n  @사용처: CommonSelectBox 년도 설정 시 사용\r\n  @파라미터:\r\n    startYear - 시작 년도(기본값:1900년), startYear 설정 시 해당 년도부터 시작\r\n    plusYear - plusYear 입력 시 해당 년도부터 설정한 수만큼 보여줌 설정 안하면 해당 년도까지 설정됨\r\n    order - 기본값은 desc\r\n    asc(오름차순) 설정시 : 1900 , desc(내림차순) 설정시 : 2022\r\n                          .                   .\r\n                          .                   .\r\n                         2022                1900\r\n*/\r\nexport const yearOptions = (startYear= 1900, plusYear, order = 'desc') => {\r\n  const year = [];\r\n  const nowYear = (new Date()).getFullYear();\r\n\r\n  for(let i = startYear; i <= (plusYear ? (nowYear + plusYear) : nowYear); i++){\r\n    year.push({name: i, value: (i).toString()});\r\n  }\r\n  return order === 'asc' ? year : year.reverse();\r\n}\r\n\r\n/*\r\n  @사용처: Input Box 숫자만 입력받고 싶을때 사용\r\n  @사용법: <input type=\"text\" v-model.number=\"scaleDetail.score\" @keyup=\"numberOnly\"/>\r\n */\r\nexport const numberOnly = ($event) => {\r\n  // let keyCode = ($event.keyCode ? $event.keyCode : $event.which);\r\n  // if (keyCode < 48 || keyCode > 57) $event.preventDefault();\r\n  let regExp = /^[0-9]*$/;\r\n  // 숫자가 아닐경우...\r\n  if (!regExp.exec($event.target.value))\r\n    $event.target.value = $event.target.value.replace(/[^0-9]/g, '');\r\n}\r\n\r\n/*\r\n  공통코드명 가져오기\r\n  @파라미터\r\n    store - 스토어\r\n    cd - 공통코드명 가져올 코드\r\n*/\r\nexport const getCdNm = (store, cd) => {\r\n  let cdNm = null;\r\n  store.state.code.codes.filter(code => {\r\n    if (code.cd === cd) cdNm = code.cdNm\r\n  });\r\n  return cdNm;\r\n}\r\n\r\nexport const goBack = () => {\r\n  router.go(-1);\r\n}\r\n\r\nexport const imgPreview = (imgSrc) => {\r\n  // v3ImgPreviewFn(imgSrc)\r\n  v3ImgPreviewFn({\r\n    showToolbar:false,\r\n    url:imgSrc\r\n  })\r\n}","import { render } from \"./ChatMng.vue?vue&type=template&id=2bfd4cb8&scoped=true\"\nimport script from \"./ChatMng.vue?vue&type=script&lang=js\"\nexport * from \"./ChatMng.vue?vue&type=script&lang=js\"\n\nimport \"./ChatMng.vue?vue&type=style&index=0&id=2bfd4cb8&lang=css\"\nimport \"./ChatMng.vue?vue&type=style&index=1&id=2bfd4cb8&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\user\\\\IdeaProjects\\\\chat-sample2\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2bfd4cb8\"]])\n\nexport default __exports__"],"names":["class","id","_createElementVNode","src","_imports_0","alt","_hoisted_18","_hoisted_23","_hoisted_24","ref","_hoisted_33","_createElementBlock","_hoisted_5","_hoisted_8","_toDisplayString","$setup","lrnerNm","_hoisted_11","_hoisted_15","accessType","_hoisted_20","_hoisted_22","onClick","_Fragment","_renderList","item","idx","_createBlock","_component_ChatMessage","key","type","message","sendDate","_hoisted_31","placeholder","$event","onKeyup","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","packet","join","decodePayload","encodedPayload","decodedPacket","push","protocol","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","BASE64_OVERHEAD","byteLength","utf8Length","Math","ceil","size","str","c","l","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","readyState","socket","onError","open","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","alphabet","map","prev","seed","num","encoded","floor","yeast","now","Date","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","port","xd","hostname","xs","secure","forceBase64","name","poll","pause","onPause","total","doPoll","doWrite","uri","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","ipv6","indexOf","path","request","assign","Request","req","method","xhrStatus","pollXhr","async","undefined","xscheme","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","then","WebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","options","compress","perMessageDeflate","Buffer","threshold","transports","websocket","re","parts","parse","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","substr","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","transportOptions","closeOnBeforeunload","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","shouldCheckPayloadSize","payloadSize","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","url","loc","test","href","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","encode","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","add","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","timer","_packet","sameNamespace","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","_imports_1","$props","_hoisted_3","_hoisted_10","props","lrnerName","setup","onMounted","querySelector","scrollTop","scrollHeight","console","log","__exports__","timestampToDateFormat","timestamp","format","d","dateToDateFormat","week","yyyy","getFullYear","mm","getMonth","dd","getDate","w","getDay","hh","getHours","getMinutes","time","h","ampm","components","ChatMessage","store","useStore","socketDns","domSocket","inputMessage","btnAreaEl","msgArr","chatScreenEl","route","params","localStorage","setItem","userInfo","atob","initUserData","alert","sendType","messageType","socketId","socketId2","channelNo","lrnerId","sendUserName","sendMessage","sendDisconnect","getRedisUsersList","curDate","connectDate","removeItem","reload","youtubeFunc","updateTyping","typing","lastTypingTime","getTime","typingTimer","timeDiff","getUsersDecryptFunc","dispatch","ACT_GET_USERS_DECRYPT","getItem","res","catch","useRoute","getUsersEncryptFunc","ACT_GET_USERS_ENCRYPT","accTy","userSn","deptCd","deptNm","encrypt","render"],"sourceRoot":""}